{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"itertools","disambiguator":[14221158248513334281,3517252992309829829]},"crate_root":"C:\\Users\\mike\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\itertools-0.5.10\\src","external_crates":[{"file_name":"C:\\Users\\mike\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\itertools-0.5.10\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12899577022084209713,17387902908088120673]}},{"file_name":"C:\\Users\\mike\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\itertools-0.5.10\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[17692770291721863432,11568636334776294997]}},{"file_name":"C:\\Users\\mike\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\itertools-0.5.10\\src\\lib.rs","num":3,"id":{"name":"alloc","disambiguator":[7747475691966087702,12514712472664671447]}},{"file_name":"C:\\Users\\mike\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\itertools-0.5.10\\src\\lib.rs","num":4,"id":{"name":"std_unicode","disambiguator":[8901696611298663549,15073388117635170846]}},{"file_name":"C:\\Users\\mike\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\itertools-0.5.10\\src\\lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[6301297201921477583,4519066023519502758]}},{"file_name":"C:\\Users\\mike\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\itertools-0.5.10\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[11493398889605411079,7090784943126777050]}},{"file_name":"C:\\Users\\mike\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\itertools-0.5.10\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9283470134785113277,16311182323300040702]}},{"file_name":"C:\\Users\\mike\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\itertools-0.5.10\\src\\lib.rs","num":8,"id":{"name":"compiler_builtins","disambiguator":[18233456377763609399,8231624503361362609]}},{"file_name":"C:\\Users\\mike\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\itertools-0.5.10\\src\\lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[5305836371476131939,5997509295812100341]}},{"file_name":"C:\\Users\\mike\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\itertools-0.5.10\\src\\lib.rs","num":10,"id":{"name":"either","disambiguator":[17792680024893827852,7301535483797952329]}}],"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":0,"byte_end":54596,"line_start":1,"line_end":1687,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":10,"index":136},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":872,"byte_end":878,"line_start":32,"line_end":32,"column_start":17,"column_end":23},"name":"Either","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":392},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1107,"byte_end":1112,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"Dedup","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":1350},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1122,"byte_end":1132,"line_start":47,"line_end":47,"column_start":9,"column_end":19},"name":"Interleave","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":1360},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1142,"byte_end":1160,"line_start":48,"line_end":48,"column_start":9,"column_end":27},"name":"InterleaveShortest","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":1390},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1170,"byte_end":1177,"line_start":49,"line_end":49,"column_start":9,"column_end":16},"name":"Product","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":1370},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1187,"byte_end":1194,"line_start":50,"line_end":50,"column_start":9,"column_end":16},"name":"PutBack","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":1380},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1204,"byte_end":1212,"line_start":51,"line_end":51,"column_start":9,"column_end":17},"name":"PutBackN","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":1400},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1222,"byte_end":1230,"line_start":52,"line_end":52,"column_start":9,"column_end":17},"name":"Batching","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":1408},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1240,"byte_end":1244,"line_start":53,"line_end":53,"column_start":9,"column_end":13},"name":"Step","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":530},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1254,"byte_end":1264,"line_start":54,"line_end":54,"column_start":9,"column_end":19},"name":"MapResults","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":332},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1274,"byte_end":1279,"line_start":55,"line_end":55,"column_start":9,"column_end":14},"name":"Merge","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":350},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1289,"byte_end":1296,"line_start":56,"line_end":56,"column_start":9,"column_end":16},"name":"MergeBy","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":1340},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1306,"byte_end":1315,"line_start":57,"line_end":57,"column_start":9,"column_end":18},"name":"MultiPeek","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":412},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1325,"byte_end":1337,"line_start":58,"line_end":58,"column_start":9,"column_end":21},"name":"TakeWhileRef","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":1438},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1347,"byte_end":1356,"line_start":59,"line_end":59,"column_start":9,"column_end":18},"name":"WhileSome","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":374},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1366,"byte_end":1374,"line_start":60,"line_end":60,"column_start":9,"column_end":17},"name":"Coalesce","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":1448},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1384,"byte_end":1401,"line_start":61,"line_end":61,"column_start":9,"column_end":26},"name":"TupleCombinations","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":480},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1411,"byte_end":1423,"line_start":62,"line_end":62,"column_start":9,"column_end":21},"name":"Combinations","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":1548},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1433,"byte_end":1439,"line_start":63,"line_end":63,"column_start":9,"column_end":15},"name":"Unique","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":1540},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1449,"byte_end":1457,"line_start":64,"line_end":64,"column_start":9,"column_end":17},"name":"UniqueBy","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":1556},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1467,"byte_end":1474,"line_start":65,"line_end":65,"column_start":9,"column_end":16},"name":"Flatten","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":602},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1513,"byte_end":1523,"line_start":67,"line_end":67,"column_start":31,"column_end":41},"name":"ConsTuples","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":1638},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1546,"byte_end":1552,"line_start":68,"line_end":68,"column_start":22,"column_end":28},"name":"Format","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":626},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1554,"byte_end":1564,"line_start":68,"line_end":68,"column_start":30,"column_end":40},"name":"FormatWith","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":738},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1593,"byte_end":1603,"line_start":69,"line_end":69,"column_start":27,"column_end":37},"name":"IntoChunks","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":762},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1605,"byte_end":1610,"line_start":69,"line_end":69,"column_start":39,"column_end":44},"name":"Chunk","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":754},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1612,"byte_end":1618,"line_start":69,"line_end":69,"column_start":46,"column_end":52},"name":"Chunks","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":698},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1620,"byte_end":1627,"line_start":69,"line_end":69,"column_start":54,"column_end":61},"name":"GroupBy","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":724},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1629,"byte_end":1634,"line_start":69,"line_end":69,"column_start":63,"column_end":68},"name":"Group","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":716},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1636,"byte_end":1642,"line_start":69,"line_end":69,"column_start":70,"column_end":76},"name":"Groups","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":1680},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1670,"byte_end":1681,"line_start":70,"line_end":70,"column_start":26,"column_end":37},"name":"Intersperse","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":818},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1709,"byte_end":1715,"line_start":71,"line_end":71,"column_start":27,"column_end":33},"name":"KMerge","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":834},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1717,"byte_end":1725,"line_start":71,"line_end":71,"column_start":35,"column_end":43},"name":"KMergeBy","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":1704},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1750,"byte_end":1758,"line_start":72,"line_end":72,"column_start":23,"column_end":31},"name":"PadUsing","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":900},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1792,"byte_end":1808,"line_start":73,"line_end":73,"column_start":33,"column_end":49},"name":"PeekingTakeWhile","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":922},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1835,"byte_end":1841,"line_start":74,"line_end":74,"column_start":26,"column_end":32},"name":"RcIter","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":952},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1864,"byte_end":1871,"line_start":75,"line_end":75,"column_start":22,"column_end":29},"name":"RepeatN","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":1000},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1895,"byte_end":1905,"line_start":76,"line_end":76,"column_start":23,"column_end":33},"name":"RepeatCall","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":1754},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1907,"byte_end":1913,"line_start":76,"line_end":76,"column_start":35,"column_end":41},"name":"Unfold","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":1760},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1915,"byte_end":1922,"line_start":76,"line_end":76,"column_start":43,"column_end":50},"name":"Iterate","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":1050},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1942,"byte_end":1945,"line_start":77,"line_end":77,"column_start":18,"column_end":21},"name":"Tee","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":1068},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1972,"byte_end":1983,"line_start":78,"line_end":78,"column_start":26,"column_end":37},"name":"TupleBuffer","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":1098},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1985,"byte_end":1997,"line_start":78,"line_end":78,"column_start":39,"column_end":51},"name":"TupleWindows","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":1084},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1999,"byte_end":2005,"line_start":78,"line_end":78,"column_start":53,"column_end":59},"name":"Tuples","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":1134},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2035,"byte_end":2047,"line_start":79,"line_end":79,"column_start":28,"column_end":40},"name":"WithPosition","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":1850},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2074,"byte_end":2079,"line_start":80,"line_end":80,"column_start":26,"column_end":31},"name":"ZipEq","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":1856},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2106,"byte_end":2116,"line_start":81,"line_end":81,"column_start":26,"column_end":36},"name":"ZipLongest","value":"","parent":{"krate":0,"index":26}},{"kind":"Use","ref_id":{"krate":0,"index":1882},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2140,"byte_end":2143,"line_start":82,"line_end":82,"column_start":23,"column_end":26},"name":"Zip","value":"","parent":{"krate":0,"index":26}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2164,"byte_end":2165,"line_start":84,"line_end":84,"column_start":18,"column_end":19},"name":"*","value":"ZipEq, PeekingTakeWhile, Flatten, Combinations, WhileSome, MergeBy, Step, PutBack, Interleave, WithPosition, TupleWindows, Tee, PadUsing, KMerge, GroupBy, IntoChunks, Format, Unique, Coalesce, MapResults, PutBackN, InterleaveShortest, ZipLongest, Tuples, KMergeBy, Intersperse, FormatWith, UniqueBy, TupleCombinations, TakeWhileRef, Merge, Batching, Product, Dedup","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":608},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2193,"byte_end":2204,"line_start":85,"line_end":85,"column_start":27,"column_end":38},"name":"cons_tuples","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":618},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2220,"byte_end":2229,"line_start":86,"line_end":86,"column_start":15,"column_end":24},"name":"diff_with","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":616},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2245,"byte_end":2249,"line_start":87,"line_end":87,"column_start":15,"column_end":19},"name":"Diff","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":836},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2273,"byte_end":2282,"line_start":88,"line_end":88,"column_start":23,"column_end":32},"name":"kmerge_by","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1686},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2301,"byte_end":2313,"line_start":89,"line_end":89,"column_start":17,"column_end":29},"name":"MinMaxResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":884},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2343,"byte_end":2354,"line_start":90,"line_end":90,"column_start":29,"column_end":40},"name":"PeekingNext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":954},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2373,"byte_end":2381,"line_start":91,"line_end":91,"column_start":18,"column_end":26},"name":"repeat_n","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1004},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2401,"byte_end":2412,"line_start":92,"line_end":92,"column_start":19,"column_end":30},"name":"repeat_call","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1014},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2414,"byte_end":2420,"line_start":92,"line_end":92,"column_start":32,"column_end":38},"name":"unfold","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1036},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2422,"byte_end":2429,"line_start":92,"line_end":92,"column_start":40,"column_end":47},"name":"iterate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1832},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2455,"byte_end":2463,"line_start":93,"line_end":93,"column_start":24,"column_end":32},"name":"Position","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1862},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2486,"byte_end":2498,"line_start":94,"line_end":94,"column_start":22,"column_end":34},"name":"EitherOrBoth","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1214},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2518,"byte_end":2526,"line_start":95,"line_end":95,"column_start":19,"column_end":27},"name":"multizip","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":224},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,102,114,101,101,46,114,115],"byte_start":94077,"byte_end":94087,"line_start":11,"line_end":11,"column_start":5,"column_end":15},"name":"interleave","value":"","parent":{"krate":0,"index":542}},{"kind":"Use","ref_id":{"krate":0,"index":340},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,102,114,101,101,46,114,115],"byte_start":94093,"byte_end":94098,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"merge","value":"","parent":{"krate":0,"index":542}},{"kind":"Use","ref_id":{"krate":0,"index":246},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,102,114,101,101,46,114,115],"byte_start":94104,"byte_end":94112,"line_start":13,"line_end":13,"column_start":5,"column_end":13},"name":"put_back","value":"","parent":{"krate":0,"index":542}},{"kind":"Use","ref_id":{"krate":0,"index":270},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,102,114,101,101,46,114,115],"byte_start":94118,"byte_end":94128,"line_start":14,"line_end":14,"column_start":5,"column_end":15},"name":"put_back_n","value":"","parent":{"krate":0,"index":542}},{"kind":"Use","ref_id":{"krate":0,"index":200},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,102,114,101,101,46,114,115],"byte_start":94162,"byte_end":94171,"line_start":16,"line_end":16,"column_start":30,"column_end":39},"name":"multipeek","value":"","parent":{"krate":0,"index":542}},{"kind":"Use","ref_id":{"krate":0,"index":820},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,102,114,101,101,46,114,115],"byte_start":94194,"byte_end":94200,"line_start":17,"line_end":17,"column_start":22,"column_end":28},"name":"kmerge","value":"","parent":{"krate":0,"index":542}},{"kind":"Use","ref_id":{"krate":0,"index":1156},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,102,114,101,101,46,114,115],"byte_start":94223,"byte_end":94229,"line_start":18,"line_end":18,"column_start":22,"column_end":28},"name":"zip_eq","value":"","parent":{"krate":0,"index":542}},{"kind":"Use","ref_id":{"krate":0,"index":924},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,102,114,101,101,46,114,115],"byte_start":94252,"byte_end":94258,"line_start":19,"line_end":19,"column_start":22,"column_end":28},"name":"rciter","value":"","parent":{"krate":0,"index":542}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2600,"byte_end":2601,"line_start":100,"line_end":100,"column_start":15,"column_end":16},"name":"*","value":"interleave, kmerge, zip_eq, merge, fold","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":0,"byte_end":54596,"line_start":1,"line_end":1687,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\mike\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\itertools-0.5.10\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":26},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":542},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":610},{"krate":0,"index":620},{"krate":0,"index":642},{"krate":0,"index":774},{"krate":0,"index":790},{"krate":0,"index":846},{"krate":0,"index":854},{"krate":0,"index":876},{"krate":0,"index":914},{"krate":0,"index":950},{"krate":0,"index":974},{"krate":0,"index":994},{"krate":0,"index":1038},{"krate":0,"index":1064},{"krate":0,"index":1126},{"krate":0,"index":1152},{"krate":0,"index":1168},{"krate":0,"index":1206},{"krate":0,"index":1218},{"krate":0,"index":1220},{"krate":0,"index":1222},{"krate":0,"index":1330},{"krate":0,"index":1332},{"krate":0,"index":1334},{"krate":0,"index":1336},{"krate":0,"index":1338}],"decl_id":null,"docs":" Itertools — extra iterator adaptors, functions and macros.","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"crate_name = \"itertools\"","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":23,"byte_end":49,"line_start":2,"line_end":2,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":26},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1065,"byte_end":1072,"line_start":44,"line_end":44,"column_start":9,"column_end":16},"name":"structs","qualname":"::structs","value":"C:\\Users\\mike\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\itertools-0.5.10\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":78},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":132}],"decl_id":null,"docs":" The concrete iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1340},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,117,108,116,105,112,101,101,107,46,114,115],"byte_start":92037,"byte_end":92046,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"MultiPeek","qualname":"::adaptors::multipeek::MultiPeek","value":"MultiPeek {  }","parent":null,"children":[{"krate":0,"index":1153},{"krate":0,"index":1155},{"krate":0,"index":1157}],"decl_id":null,"docs":" See [`multipeek()`](../fn.multipeek.html) for more information.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":200},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,117,108,116,105,112,101,101,107,46,114,115],"byte_start":92272,"byte_end":92281,"line_start":19,"line_end":19,"column_start":8,"column_end":17},"name":"multipeek","qualname":"::adaptors::multipeek::multipeek","value":"fn <I> (iterable: I) -> MultiPeek<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" An iterator adaptor that allows the user to peek at multiple `.next()`\n values without advancing the base iterator.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,117,108,116,105,112,101,101,107,46,114,115],"byte_start":92563,"byte_end":92573,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"reset_peek","qualname":"<MultiPeek<I>>::reset_peek","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,117,108,116,105,112,101,101,107,46,114,115],"byte_start":92837,"byte_end":92841,"line_start":42,"line_end":42,"column_start":12,"column_end":16},"name":"peek","qualname":"<MultiPeek<I>>::peek","value":"fn (&mut self) -> Option<&I::Item>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1350},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":55985,"byte_end":55995,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"name":"Interleave","qualname":"::adaptors::Interleave","value":"Interleave {  }","parent":null,"children":[{"krate":0,"index":1165},{"krate":0,"index":1167},{"krate":0,"index":1169}],"decl_id":null,"docs":" An iterator adaptor that alternates elements from two iterators until both\n run out.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":224},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":56325,"byte_end":56335,"line_start":56,"line_end":56,"column_start":8,"column_end":18},"name":"interleave","qualname":"::adaptors::interleave","value":"fn <I, J> (i: I, j: J) -> Interleave<<I as IntoIterator>::IntoIter, <J as IntoIterator>::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that interleaves elements in `i` and `j`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1360},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":57526,"byte_end":57544,"line_start":101,"line_end":101,"column_start":12,"column_end":30},"name":"InterleaveShortest","qualname":"::adaptors::InterleaveShortest","value":"InterleaveShortest {  }","parent":null,"children":[{"krate":0,"index":1183},{"krate":0,"index":1185},{"krate":0,"index":1187}],"decl_id":null,"docs":" An iterator adaptor that alternates elements from the two iterators until\n one of them runs out.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1370},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":59694,"byte_end":59701,"line_start":176,"line_end":176,"column_start":12,"column_end":19},"name":"PutBack","qualname":"::adaptors::PutBack","value":"PutBack {  }","parent":null,"children":[{"krate":0,"index":1201},{"krate":0,"index":1203}],"decl_id":null,"docs":" An iterator adaptor that allows putting back a single\n item to the front of the iterator.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":246},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":59838,"byte_end":59846,"line_start":184,"line_end":184,"column_start":8,"column_end":16},"name":"put_back","qualname":"::adaptors::put_back","value":"fn <I> (iterable: I) -> PutBack<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator where you can put back a single item\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":60129,"byte_end":60132,"line_start":199,"line_end":199,"column_start":12,"column_end":15},"name":"new","qualname":"<PutBack<I>>::new","value":"fn (it: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":60289,"byte_end":60299,"line_start":207,"line_end":207,"column_start":12,"column_end":22},"name":"with_value","qualname":"<PutBack<I>>::with_value","value":"fn (mut self, value: I::Item) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":60455,"byte_end":60465,"line_start":214,"line_end":214,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<PutBack<I>>::into_parts","value":"fn (self) -> (Option<I::Item>, I)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":60730,"byte_end":60738,"line_start":223,"line_end":223,"column_start":12,"column_end":20},"name":"put_back","qualname":"<PutBack<I>>::put_back","value":"fn (&mut self, x: I::Item) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1380},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":61975,"byte_end":61983,"line_start":272,"line_end":272,"column_start":12,"column_end":20},"name":"PutBackN","qualname":"::adaptors::PutBackN","value":"PutBackN {  }","parent":null,"children":[{"krate":0,"index":1211},{"krate":0,"index":1213}],"decl_id":null,"docs":" An iterator adaptor that allows putting multiple\n items in front of the iterator.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":270},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":62186,"byte_end":62196,"line_start":281,"line_end":281,"column_start":8,"column_end":18},"name":"put_back_n","qualname":"::adaptors::put_back_n","value":"fn <I> (iterable: I) -> PutBackN<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator where you can put back multiple values to the front\n of the iteration.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":62478,"byte_end":62481,"line_start":294,"line_end":294,"column_start":12,"column_end":15},"name":"new","qualname":"<PutBackN<I>>::new","value":"fn (it: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":62926,"byte_end":62934,"line_start":313,"line_end":313,"column_start":12,"column_end":20},"name":"put_back","qualname":"<PutBackN<I>>::put_back","value":"fn (&mut self, x: I::Item) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1390},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":63708,"byte_end":63715,"line_start":342,"line_end":342,"column_start":12,"column_end":19},"name":"Product","qualname":"::adaptors::Product","value":"Product {  }","parent":null,"children":[{"krate":0,"index":1221},{"krate":0,"index":1223},{"krate":0,"index":1225},{"krate":0,"index":1227}],"decl_id":null,"docs":" An iterator adaptor that iterates over the cartesian product of\n the element sets of two iterators `I` and `J`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1400},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":65708,"byte_end":65716,"line_start":415,"line_end":415,"column_start":12,"column_end":20},"name":"Batching","qualname":"::adaptors::Batching","value":"Batching {  }","parent":null,"children":[{"krate":0,"index":1241},{"krate":0,"index":1243}],"decl_id":null,"docs":" A “meta iterator adaptor”. Its closure recives a reference to the iterator\n and may pick off as many elements as it likes, to produce the next iterator element.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1408},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":66683,"byte_end":66687,"line_start":454,"line_end":454,"column_start":12,"column_end":16},"name":"Step","qualname":"::adaptors::Step","value":"Step {  }","parent":null,"children":[{"krate":0,"index":1253},{"krate":0,"index":1255}],"decl_id":null,"docs":" An iterator adaptor that steps a number elements in the base iterator\n for each iteration.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":332},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":69361,"byte_end":69366,"line_start":567,"line_end":567,"column_start":12,"column_end":17},"name":"Merge","qualname":"::adaptors::Merge","value":"Merge {  }","parent":null,"children":[{"krate":0,"index":117}],"decl_id":null,"docs":" An iterator adaptor that merges the two base iterators in ascending order.\n If both base iterators are sorted (ascending), the result is sorted.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":340},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":70154,"byte_end":70159,"line_start":603,"line_end":603,"column_start":8,"column_end":13},"name":"merge","qualname":"::adaptors::merge","value":"fn <I, J> (i: I, j: J) -> Merge<<I as IntoIterator>::IntoIter, <J as IntoIterator>::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that merges elements in `i` and `j`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":350},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":71158,"byte_end":71165,"line_start":639,"line_end":639,"column_start":12,"column_end":19},"name":"MergeBy","qualname":"::adaptors::MergeBy","value":"MergeBy {  }","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":143}],"decl_id":null,"docs":" An iterator adaptor that merges the two base iterators in ascending order.\n If both base iterators are sorted (ascending), the result is sorted.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":374},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":73642,"byte_end":73650,"line_start":739,"line_end":739,"column_start":12,"column_end":20},"name":"Coalesce","qualname":"::adaptors::Coalesce","value":"Coalesce {  }","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":181}],"decl_id":null,"docs":" An iterator adaptor that may join together adjacent elements.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":392},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":74807,"byte_end":74812,"line_start":793,"line_end":793,"column_start":12,"column_end":17},"name":"Dedup","qualname":"::adaptors::Dedup","value":"Dedup {  }","parent":null,"children":[{"krate":0,"index":203}],"decl_id":null,"docs":" An iterator adaptor that removes repeated duplicates.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":412},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":76449,"byte_end":76461,"line_start":865,"line_end":865,"column_start":12,"column_end":24},"name":"TakeWhileRef","qualname":"::adaptors::TakeWhileRef","value":"TakeWhileRef {  }","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":225}],"decl_id":null,"docs":" An iterator adaptor that borrows from a `Clone`-able iterator\n to only pick off elements while the predicate returns `true`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1438},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":77760,"byte_end":77769,"line_start":915,"line_end":915,"column_start":12,"column_end":21},"name":"WhileSome","qualname":"::adaptors::WhileSome","value":"WhileSome {  }","parent":null,"children":[{"krate":0,"index":1273}],"decl_id":null,"docs":" An iterator adaptor that filters `Option<A>` iterator elements\n and produces `A`. Stops on the first `None` encountered.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1448},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":78546,"byte_end":78563,"line_start":948,"line_end":948,"column_start":12,"column_end":29},"name":"TupleCombinations","qualname":"::adaptors::TupleCombinations","value":"TupleCombinations {  }","parent":null,"children":[{"krate":0,"index":1281},{"krate":0,"index":1283},{"krate":0,"index":1285}],"decl_id":null,"docs":" An iterator to iterate through all combinations in a `Clone`-able iterator that produces tuples\n of a specific size.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":436},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":78714,"byte_end":78728,"line_start":957,"line_end":957,"column_start":11,"column_end":25},"name":"HasCombination","qualname":"::adaptors::HasCombination","value":"HasCombination<I>: Sized","parent":null,"children":[{"krate":0,"index":438}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":438},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":78750,"byte_end":78761,"line_start":958,"line_end":958,"column_start":10,"column_end":21},"name":"Combination","qualname":"::adaptors::HasCombination::Combination","value":"type Combination: From<I> + Iterator<Item = Self>;","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1454},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":79382,"byte_end":79399,"line_start":986,"line_end":986,"column_start":12,"column_end":29},"name":"Tuple1Combination","qualname":"::adaptors::Tuple1Combination","value":"Tuple1Combination {  }","parent":null,"children":[{"krate":0,"index":1295}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":480},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":83286,"byte_end":83298,"line_start":1138,"line_end":1138,"column_start":12,"column_end":24},"name":"Combinations","qualname":"::adaptors::Combinations","value":"Combinations {  }","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":285}],"decl_id":null,"docs":" An iterator to iterate through all the `n`-length combinations in an iterator.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1540},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":85848,"byte_end":85856,"line_start":1236,"line_end":1236,"column_start":12,"column_end":20},"name":"UniqueBy","qualname":"::adaptors::UniqueBy","value":"UniqueBy {  }","parent":null,"children":[{"krate":0,"index":1389},{"krate":0,"index":1391},{"krate":0,"index":1393}],"decl_id":null,"docs":" An iterator adapter to filter out duplicate elements.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1548},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":88021,"byte_end":88027,"line_start":1322,"line_end":1322,"column_start":12,"column_end":18},"name":"Unique","qualname":"::adaptors::Unique","value":"Unique {  }","parent":null,"children":[{"krate":0,"index":1407}],"decl_id":null,"docs":" An iterator adapter to filter out duplicate elements.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1556},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":88643,"byte_end":88650,"line_start":1350,"line_end":1350,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::adaptors::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":1413},{"krate":0,"index":1415},{"krate":0,"index":1417}],"decl_id":null,"docs":" An iterator adapter to simply flatten a structure.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":530},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":91223,"byte_end":91233,"line_start":1444,"line_end":1444,"column_start":12,"column_end":22},"name":"MapResults","qualname":"::adaptors::MapResults","value":"MapResults {  }","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":337}],"decl_id":null,"docs":" An iterator adapter to apply a transformation within a nested `Result`.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":542},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,102,114,101,101,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"free","qualname":"::free","value":"C:\\Users\\mike\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\itertools-0.5.10\\src\\free.rs","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":552},{"krate":0,"index":554},{"krate":0,"index":564},{"krate":0,"index":566},{"krate":0,"index":568},{"krate":0,"index":570},{"krate":0,"index":572},{"krate":0,"index":574},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":594}],"decl_id":null,"docs":" Free functions that create iterator adaptors or call iterator methods.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":572},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,102,114,101,101,46,114,115],"byte_start":94499,"byte_end":94508,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::free::enumerate","value":"fn <I> (iterable: I) -> iter::Enumerate<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Iterate `iterable` with a running index.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":574},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,102,114,101,101,46,114,115],"byte_start":94830,"byte_end":94833,"line_start":49,"line_end":49,"column_start":8,"column_end":11},"name":"rev","qualname":"::free::rev","value":"fn <I> (iterable: I) -> iter::Rev<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Iterate `iterable` in reverse.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":576},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,102,114,101,101,46,114,115],"byte_start":95234,"byte_end":95237,"line_start":68,"line_end":68,"column_start":8,"column_end":11},"name":"zip","qualname":"::free::zip","value":"fn <I, J> (i: I, j: J) -> Zip<I::IntoIter, J::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Iterate `i` and `j` in lock step.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":578},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,102,114,101,101,46,114,115],"byte_start":95617,"byte_end":95622,"line_start":86,"line_end":86,"column_start":8,"column_end":13},"name":"chain","qualname":"::free::chain","value":"fn <I, J> (i: I, j: J) -> iter::Chain<<I as IntoIterator>::IntoIter, <J as IntoIterator>::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that first iterates `i` and then `j`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":580},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,102,114,101,101,46,114,115],"byte_start":96045,"byte_end":96051,"line_start":102,"line_end":102,"column_start":8,"column_end":14},"name":"cloned","qualname":"::free::cloned","value":"fn <'a, I, T> (iterable: I) -> iter::Cloned<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that clones each element from &T to T","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":582},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,102,114,101,101,46,114,115],"byte_start":96439,"byte_end":96443,"line_start":118,"line_end":118,"column_start":8,"column_end":12},"name":"fold","qualname":"::free::fold","value":"fn <I, B, F> (iterable: I, init: B, f: F) -> B","parent":null,"children":[],"decl_id":null,"docs":" Perform a fold operation over the iterable.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":584},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,102,114,101,101,46,114,115],"byte_start":96818,"byte_end":96821,"line_start":134,"line_end":134,"column_start":8,"column_end":11},"name":"all","qualname":"::free::all","value":"fn <I, F> (iterable: I, f: F) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the predicate holds for all elements in the iterable.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":586},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,102,114,101,101,46,114,115],"byte_start":97181,"byte_end":97184,"line_start":150,"line_end":150,"column_start":8,"column_end":11},"name":"any","qualname":"::free::any","value":"fn <I, F> (iterable: I, f: F) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the predicate holds for any elements in the iterable.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":588},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,102,114,101,101,46,114,115],"byte_start":97509,"byte_end":97512,"line_start":166,"line_end":166,"column_start":8,"column_end":11},"name":"max","qualname":"::free::max","value":"fn <I> (iterable: I) -> Option<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Return the maximum value of the iterable.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":590},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,102,114,101,101,46,114,115],"byte_start":97825,"byte_end":97828,"line_start":182,"line_end":182,"column_start":8,"column_end":11},"name":"min","qualname":"::free::min","value":"fn <I> (iterable: I) -> Option<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Return the minimum value of the iterable.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":592},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,102,114,101,101,46,114,115],"byte_start":98193,"byte_end":98197,"line_start":199,"line_end":199,"column_start":8,"column_end":12},"name":"join","qualname":"::free::join","value":"fn <I> (iterable: I, sep: &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Combine all iterator elements into one String, seperated by `sep`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":594},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,102,114,101,101,46,114,115],"byte_start":98622,"byte_end":98628,"line_start":216,"line_end":216,"column_start":8,"column_end":14},"name":"sorted","qualname":"::free::sorted","value":"fn <I> (iterable: I) -> Vec<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Collect all the iterable's elements into a sorted vector in ascending order.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":602},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,99,111,110,115,95,116,117,112,108,101,115,95,105,109,112,108,46,114,115],"byte_start":99934,"byte_end":99944,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"name":"ConsTuples","qualname":"::cons_tuples_impl::ConsTuples","value":"ConsTuples {  }","parent":null,"children":[{"krate":0,"index":405}],"decl_id":null,"docs":" An iterator that maps an iterator of tuples like\n `((A, B), C)` to an iterator of `(A, B, C)`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":608},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,99,111,110,115,95,116,117,112,108,101,115,95,105,109,112,108,46,114,115],"byte_start":100285,"byte_end":100296,"line_start":57,"line_end":57,"column_start":8,"column_end":19},"name":"cons_tuples","qualname":"::cons_tuples_impl::cons_tuples","value":"fn <I, J> (iterable: I) -> ConsTuples<I, J>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that maps for example iterators of\n `((A, B), C)` to `(A, B, C)`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":419},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,100,105,102,102,46,114,115],"byte_start":101228,"byte_end":101241,"line_start":21,"line_end":21,"column_start":5,"column_end":18},"name":"FirstMismatch","qualname":"::diff::Diff::FirstMismatch","value":"Diff::FirstMismatch(usize, PutBack<I>, PutBack<J>)","parent":{"krate":0,"index":616},"children":[],"decl_id":null,"docs":" The index of the first non-matching element along with both iterator's remaining elements\n starting with the first mis-match.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":427},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,100,105,102,102,46,114,115],"byte_start":101374,"byte_end":101381,"line_start":23,"line_end":23,"column_start":5,"column_end":12},"name":"Shorter","qualname":"::diff::Diff::Shorter","value":"Diff::Shorter(usize, PutBack<I>)","parent":{"krate":0,"index":616},"children":[],"decl_id":null,"docs":" The total number of elements that were in `J` along with the remaining elements of `I`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":433},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,100,105,102,102,46,114,115],"byte_start":101502,"byte_end":101508,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Longer","qualname":"::diff::Diff::Longer","value":"Diff::Longer(usize, PutBack<J>)","parent":{"krate":0,"index":616},"children":[],"decl_id":null,"docs":" The total number of elements that were in `I` along with the remaining elements of `J`.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":616},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,100,105,102,102,46,114,115],"byte_start":101025,"byte_end":101029,"line_start":15,"line_end":15,"column_start":10,"column_end":14},"name":"Diff","qualname":"::diff::Diff","value":"Diff::{FirstMismatch, Shorter, Longer}","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":427},{"krate":0,"index":433}],"decl_id":null,"docs":" A type returned by the [`diff_with`](./fn.diff_with.html) function.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":618},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,100,105,102,102,46,114,115],"byte_start":102257,"byte_end":102266,"line_start":40,"line_end":40,"column_start":8,"column_end":17},"name":"diff_with","qualname":"::diff::diff_with","value":"fn <I, J, F> (i: I, j: J, is_equal: F) -> Option<Diff<I::IntoIter, J::IntoIter>>","parent":null,"children":[],"decl_id":null,"docs":" Compares every element yielded by both `i` and `j` with the given function in lock-step and\n returns a `Diff` which describes how `j` differs from `i`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":626},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,102,111,114,109,97,116,46,114,115],"byte_start":103386,"byte_end":103396,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"FormatWith","qualname":"::format::FormatWith","value":"FormatWith {  }","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":453}],"decl_id":null,"docs":" Format all iterator elements lazily, separated by `sep`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1638},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,102,111,114,109,97,116,46,114,115],"byte_start":103819,"byte_end":103825,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"name":"Format","qualname":"::format::Format","value":"Format {  }","parent":null,"children":[{"krate":0,"index":1611},{"krate":0,"index":1613}],"decl_id":null,"docs":" Format all iterator elements lazily, separated by `sep`.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":654},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":106538,"byte_end":106541,"line_start":6,"line_end":6,"column_start":10,"column_end":13},"name":"Key","qualname":"::groupbylazy::KeyFunction::Key","value":"type Key;","parent":{"krate":0,"index":652},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":698},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":115399,"byte_end":115406,"line_start":284,"line_end":284,"column_start":12,"column_end":19},"name":"GroupBy","qualname":"::groupbylazy::GroupBy","value":"GroupBy {  }","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":551}],"decl_id":null,"docs":" `GroupBy` is the storage for the lazy grouping operation.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":716},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":117169,"byte_end":117175,"line_start":353,"line_end":353,"column_start":12,"column_end":18},"name":"Groups","qualname":"::groupbylazy::Groups","value":"Groups {  }","parent":null,"children":[{"krate":0,"index":579}],"decl_id":null,"docs":" An iterator that yields the Group iterators.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":724},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":118043,"byte_end":118048,"line_start":387,"line_end":387,"column_start":12,"column_end":17},"name":"Group","qualname":"::groupbylazy::Group","value":"Group {  }","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":603}],"decl_id":null,"docs":" An iterator for the elements in a single group.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":738},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":119879,"byte_end":119889,"line_start":458,"line_end":458,"column_start":12,"column_end":22},"name":"IntoChunks","qualname":"::groupbylazy::IntoChunks","value":"IntoChunks {  }","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":633}],"decl_id":null,"docs":" `ChunkLazy` is the storage for a lazy chunking operation.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":754},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":120938,"byte_end":120944,"line_start":502,"line_end":502,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::groupbylazy::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":643}],"decl_id":null,"docs":" An iterator that yields the Chunk iterators.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":762},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":121662,"byte_end":121667,"line_start":533,"line_end":533,"column_start":12,"column_end":17},"name":"Chunk","qualname":"::groupbylazy::Chunk","value":"Chunk {  }","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":657},{"krate":0,"index":659}],"decl_id":null,"docs":" An iterator for the elements in a single chunk.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1680},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,105,110,116,101,114,115,112,101,114,115,101,46,114,115],"byte_start":122620,"byte_end":122631,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"Intersperse","qualname":"::intersperse::Intersperse","value":"Intersperse {  }","parent":null,"children":[{"krate":0,"index":1663},{"krate":0,"index":1665},{"krate":0,"index":1667}],"decl_id":null,"docs":" An iterator adaptor to insert a particular value\n between each element of the adapted iterator.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":818},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,107,109,101,114,103,101,95,105,109,112,108,46,114,115],"byte_start":126727,"byte_end":126733,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"KMerge","qualname":"::kmerge_impl::KMerge","value":"KMerge {  }","parent":null,"children":[{"krate":0,"index":697}],"decl_id":null,"docs":" An iterator adaptor that merges an abitrary number of base iterators in ascending order.\n If all base iterators are sorted (ascending), the result is sorted.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":820},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,107,109,101,114,103,101,95,105,109,112,108,46,114,115],"byte_start":127111,"byte_end":127117,"line_start":130,"line_end":130,"column_start":8,"column_end":14},"name":"kmerge","qualname":"::kmerge_impl::kmerge","value":"fn <I> (iterable: I) -> KMerge<<I::Item as IntoIterator>::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that merges elements of the contained iterators using\n the ordering function.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":834},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,107,109,101,114,103,101,95,105,109,112,108,46,114,115],"byte_start":128697,"byte_end":128705,"line_start":186,"line_end":186,"column_start":12,"column_end":20},"name":"KMergeBy","qualname":"::kmerge_impl::KMergeBy","value":"KMergeBy {  }","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":717}],"decl_id":null,"docs":" An iterator adaptor that merges an abitrary number of base iterators\n according to an ordering function.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":836},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,107,109,101,114,103,101,95,105,109,112,108,46,114,115],"byte_start":128932,"byte_end":128941,"line_start":196,"line_end":196,"column_start":8,"column_end":17},"name":"kmerge_by","qualname":"::kmerge_impl::kmerge_by","value":"fn <I, F> (iterable: I, mut less_than: F) -> KMergeBy<<I::Item as IntoIterator>::IntoIter, F>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that merges elements of the contained iterators.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1673},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,109,105,110,109,97,120,46,114,115],"byte_start":130515,"byte_end":130525,"line_start":7,"line_end":7,"column_start":5,"column_end":15},"name":"NoElements","qualname":"::minmax::MinMaxResult::NoElements","value":"MinMaxResult::NoElements","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":" Empty iterator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1675},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,109,105,110,109,97,120,46,114,115],"byte_start":130607,"byte_end":130617,"line_start":10,"line_end":10,"column_start":5,"column_end":15},"name":"OneElement","qualname":"::minmax::MinMaxResult::OneElement","value":"MinMaxResult::OneElement(T)","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":" Iterator with one element, so the minimum and maximum are the same\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1679},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,109,105,110,109,97,120,46,114,115],"byte_start":130730,"byte_end":130736,"line_start":14,"line_end":14,"column_start":5,"column_end":11},"name":"MinMax","qualname":"::minmax::MinMaxResult::MinMax","value":"MinMaxResult::MinMax(T, T)","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":" More than one element in the iterator, the first element is not larger\n than the second\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1686},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,109,105,110,109,97,120,46,114,115],"byte_start":130470,"byte_end":130482,"line_start":5,"line_end":5,"column_start":10,"column_end":22},"name":"MinMaxResult","qualname":"::minmax::MinMaxResult","value":"MinMaxResult::{NoElements, OneElement, MinMax}","parent":null,"children":[{"krate":0,"index":1673},{"krate":0,"index":1675},{"krate":0,"index":1679}],"decl_id":null,"docs":" `MinMaxResult` is an enum returned by `minmax`. See `Itertools::minmax()` for\n more detail.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,109,105,110,109,97,120,46,114,115],"byte_start":130461,"byte_end":130744,"line_start":5,"line_end":15,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,109,105,110,109,97,120,46,114,115],"byte_start":131554,"byte_end":131565,"line_start":38,"line_end":38,"column_start":12,"column_end":23},"name":"into_option","qualname":"<MinMaxResult<T>>::into_option","value":"fn (self) -> Option<(T, T)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1704},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,97,100,95,116,97,105,108,46,114,115],"byte_start":134490,"byte_end":134498,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"PadUsing","qualname":"::pad_tail::PadUsing","value":"PadUsing {  }","parent":null,"children":[{"krate":0,"index":1695},{"krate":0,"index":1697},{"krate":0,"index":1699},{"krate":0,"index":1701}],"decl_id":null,"docs":" An iterator adaptor that pads a sequence to a minimum length by filling\n missing elements using a closure.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":884},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":136659,"byte_end":136670,"line_start":14,"line_end":14,"column_start":11,"column_end":22},"name":"PeekingNext","qualname":"::peeking_take_while::PeekingNext","value":"PeekingNext: Iterator","parent":null,"children":[{"krate":0,"index":886}],"decl_id":null,"docs":" An iterator that allows peeking at an element before deciding to accept it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":136854,"byte_end":136866,"line_start":18,"line_end":18,"column_start":8,"column_end":20},"name":"peeking_next","qualname":"::peeking_take_while::PeekingNext::peeking_next","value":"fn <F> (&mut self, accept: F) -> Option<Self::Item>","parent":{"krate":0,"index":884},"children":[],"decl_id":null,"docs":" An iterator that allows peeking at an element before deciding to accept it.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":900},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":138283,"byte_end":138299,"line_start":77,"line_end":77,"column_start":12,"column_end":28},"name":"PeekingTakeWhile","qualname":"::peeking_take_while::PeekingTakeWhile","value":"PeekingTakeWhile {  }","parent":null,"children":[{"krate":0,"index":779},{"krate":0,"index":781}],"decl_id":null,"docs":" An iterator adaptor that takes items while a closure returns `true`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":922},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,114,99,105,116,101,114,95,105,109,112,108,46,114,115],"byte_start":140735,"byte_end":140741,"line_start":7,"line_end":7,"column_start":12,"column_end":18},"name":"RcIter","qualname":"::rciter_impl::RcIter","value":"RcIter { rciter }","parent":null,"children":[{"krate":0,"index":799}],"decl_id":null,"docs":" A wrapper for `Rc<RefCell<I>>`, that implements the `Iterator` trait.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":799},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,114,99,105,116,101,114,95,105,109,112,108,46,114,115],"byte_start":140783,"byte_end":140789,"line_start":9,"line_end":9,"column_start":9,"column_end":15},"name":"rciter","qualname":"::rciter_impl::RcIter::rciter","value":"std::rc::Rc<std::cell::RefCell<I>>","parent":{"krate":0,"index":922},"children":[],"decl_id":null,"docs":" The boxed iterator.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":924},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,114,99,105,116,101,114,95,105,109,112,108,46,114,115],"byte_start":141843,"byte_end":141849,"line_start":39,"line_end":39,"column_start":8,"column_end":14},"name":"rciter","qualname":"::rciter_impl::rciter","value":"fn <I> (iterable: I) -> RcIter<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator inside a `Rc<RefCell<_>>` wrapper.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":952},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,114,101,112,101,97,116,110,46,114,115],"byte_start":143272,"byte_end":143279,"line_start":5,"line_end":5,"column_start":12,"column_end":19},"name":"RepeatN","qualname":"::repeatn::RepeatN","value":"RepeatN {  }","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":819}],"decl_id":null,"docs":" An iterator that produces *n* repetitions of an element.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":954},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,114,101,112,101,97,116,110,46,114,115],"byte_start":143396,"byte_end":143404,"line_start":11,"line_end":11,"column_start":8,"column_end":16},"name":"repeat_n","qualname":"::repeatn::repeat_n","value":"fn <A> (element: A, n: usize) -> RepeatN<A>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that produces `n` repetitions of `element`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,114,101,112,101,97,116,110,46,114,115],"byte_start":143707,"byte_end":143710,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"new","qualname":"<RepeatN<A>>::new","value":"fn (elt: A, n: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1000},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,115,111,117,114,99,101,115,46,114,115],"byte_start":147213,"byte_end":147223,"line_start":8,"line_end":8,"column_start":12,"column_end":22},"name":"RepeatCall","qualname":"::sources::RepeatCall","value":"RepeatCall {  }","parent":null,"children":[{"krate":0,"index":837}],"decl_id":null,"docs":" See [`repeat_call`](../fn.repeat_call.html) for more information.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1004},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,115,111,117,114,99,101,115,46,114,115],"byte_start":147915,"byte_end":147926,"line_start":39,"line_end":39,"column_start":8,"column_end":19},"name":"repeat_call","qualname":"::sources::repeat_call","value":"fn <F> (function: F) -> RepeatCall<F>","parent":null,"children":[],"decl_id":null,"docs":" An iterator source that produces elements indefinitely by calling\n a given closure.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1014},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,115,111,117,114,99,101,115,46,114,115],"byte_start":149531,"byte_end":149537,"line_start":96,"line_end":96,"column_start":8,"column_end":14},"name":"unfold","qualname":"::sources::unfold","value":"fn <A, St, F> (initial_state: St, f: F) -> Unfold<St, F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unfold source with the specified closure as the \"iterator\n function\" and an initial state to eventually pass to the closure","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1754},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,115,111,117,114,99,101,115,46,114,115],"byte_start":149897,"byte_end":149903,"line_start":113,"line_end":113,"column_start":12,"column_end":18},"name":"Unfold","qualname":"::sources::Unfold","value":"Unfold { state }","parent":null,"children":[{"krate":0,"index":1761},{"krate":0,"index":1763}],"decl_id":null,"docs":" See [`unfold`](../fn.unfold.html) for more information.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1763},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,115,111,117,114,99,101,115,46,114,115],"byte_start":150011,"byte_end":150016,"line_start":116,"line_end":116,"column_start":9,"column_end":14},"name":"state","qualname":"::sources::Unfold::state","value":"St","parent":{"krate":0,"index":1754},"children":[],"decl_id":null,"docs":" Internal state that will be passed to the closure on the next iteration\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1760},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,115,111,117,114,99,101,115,46,114,115],"byte_start":150610,"byte_end":150617,"line_start":142,"line_end":142,"column_start":12,"column_end":19},"name":"Iterate","qualname":"::sources::Iterate","value":"Iterate {  }","parent":null,"children":[{"krate":0,"index":1773},{"krate":0,"index":1775}],"decl_id":null,"docs":" An iterator that infinitely applies function to value and yields results.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1036},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,115,111,117,114,99,101,115,46,114,115],"byte_start":151374,"byte_end":151381,"line_start":177,"line_end":177,"column_start":8,"column_end":15},"name":"iterate","qualname":"::sources::iterate","value":"fn <St, F> (initial_value: St, f: F) -> Iterate<St, F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new iterator that infinitely applies function to value and yields results.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1050},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,116,101,101,46,114,115],"byte_start":151994,"byte_end":151997,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"Tee","qualname":"::tee::Tee","value":"Tee {  }","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":889}],"decl_id":null,"docs":" One half of an iterator pair where both return the same elements.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1068},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,116,117,112,108,101,95,105,109,112,108,46,114,115],"byte_start":153826,"byte_end":153837,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"TupleBuffer","qualname":"::tuple_impl::TupleBuffer","value":"TupleBuffer {  }","parent":null,"children":[{"krate":0,"index":899},{"krate":0,"index":901}],"decl_id":null,"docs":" An iterator over a incomplete tuple.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1084},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,116,117,112,108,101,95,105,109,112,108,46,114,115],"byte_start":154989,"byte_end":154995,"line_start":63,"line_end":63,"column_start":12,"column_end":18},"name":"Tuples","qualname":"::tuple_impl::Tuples","value":"Tuples {  }","parent":null,"children":[{"krate":0,"index":913},{"krate":0,"index":915}],"decl_id":null,"docs":" An iterator that groups the items in tuples of a specific size.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,116,117,112,108,101,95,105,109,112,108,46,114,115],"byte_start":156034,"byte_end":156045,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"into_buffer","qualname":"<Tuples<I, T>>::into_buffer","value":"fn (self) -> TupleBuffer<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1098},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,116,117,112,108,101,95,105,109,112,108,46,114,115],"byte_start":156318,"byte_end":156330,"line_start":117,"line_end":117,"column_start":12,"column_end":24},"name":"TupleWindows","qualname":"::tuple_impl::TupleWindows","value":"TupleWindows {  }","parent":null,"children":[{"krate":0,"index":933},{"krate":0,"index":935}],"decl_id":null,"docs":" An iterator over all contiguous windows that produces tuples of a specific size.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1110},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,116,117,112,108,101,95,105,109,112,108,46,114,115],"byte_start":157627,"byte_end":157639,"line_start":170,"line_end":170,"column_start":11,"column_end":23},"name":"TupleCollect","qualname":"::tuple_impl::TupleCollect","value":"TupleCollect: Sized","parent":null,"children":[{"krate":0,"index":1112},{"krate":0,"index":1114},{"krate":0,"index":1116},{"krate":0,"index":1118},{"krate":0,"index":1120},{"krate":0,"index":1122}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1112},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,116,117,112,108,101,95,105,109,112,108,46,114,115],"byte_start":157658,"byte_end":157662,"line_start":171,"line_end":171,"column_start":10,"column_end":14},"name":"Item","qualname":"::tuple_impl::TupleCollect::Item","value":"type Item;","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1114},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,116,117,112,108,101,95,105,109,112,108,46,114,115],"byte_start":157673,"byte_end":157679,"line_start":172,"line_end":172,"column_start":10,"column_end":16},"name":"Buffer","qualname":"::tuple_impl::TupleCollect::Buffer","value":"type Buffer: Default + AsRef<[Option<Self::Item>]> + AsMut<[Option<Self::Item>]>;","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,116,117,112,108,101,95,105,109,112,108,46,114,115],"byte_start":157758,"byte_end":157775,"line_start":174,"line_end":174,"column_start":8,"column_end":25},"name":"collect_from_iter","qualname":"::tuple_impl::TupleCollect::collect_from_iter","value":"fn <I> (iter: I, buf: &mut Self::Buffer) -> Option<Self>","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,116,117,112,108,101,95,105,109,112,108,46,114,115],"byte_start":157886,"byte_end":157910,"line_start":177,"line_end":177,"column_start":8,"column_end":32},"name":"collect_from_iter_no_buf","qualname":"::tuple_impl::TupleCollect::collect_from_iter_no_buf","value":"fn <I> (iter: I) -> Option<Self>","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,116,117,112,108,101,95,105,109,112,108,46,114,115],"byte_start":157997,"byte_end":158006,"line_start":180,"line_end":180,"column_start":8,"column_end":17},"name":"num_items","qualname":"::tuple_impl::TupleCollect::num_items","value":"fn () -> usize","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,116,117,112,108,101,95,105,109,112,108,46,114,115],"byte_start":158027,"byte_end":158042,"line_start":182,"line_end":182,"column_start":8,"column_end":23},"name":"left_shift_push","qualname":"::tuple_impl::TupleCollect::left_shift_push","value":"fn (&mut self, item: Self::Item) -> ()","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1134},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,119,105,116,104,95,112,111,115,105,116,105,111,110,46,114,115],"byte_start":160688,"byte_end":160700,"line_start":8,"line_end":8,"column_start":12,"column_end":24},"name":"WithPosition","qualname":"::with_position::WithPosition","value":"WithPosition {  }","parent":null,"children":[{"krate":0,"index":953},{"krate":0,"index":955}],"decl_id":null,"docs":" An iterator adaptor that wraps each element in an [`Position`](../enum.Position.html).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1817},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,119,105,116,104,95,112,111,115,105,116,105,111,110,46,114,115],"byte_start":161317,"byte_end":161322,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"First","qualname":"::with_position::Position::First","value":"Position::First(T)","parent":{"krate":0,"index":1832},"children":[],"decl_id":null,"docs":" This is the first element.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1821},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,119,105,116,104,95,112,111,115,105,116,105,111,110,46,114,115],"byte_start":161387,"byte_end":161393,"line_start":34,"line_end":34,"column_start":5,"column_end":11},"name":"Middle","qualname":"::with_position::Position::Middle","value":"Position::Middle(T)","parent":{"krate":0,"index":1832},"children":[],"decl_id":null,"docs":" This is neither the first nor the last element.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1825},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,119,105,116,104,95,112,111,115,105,116,105,111,110,46,114,115],"byte_start":161436,"byte_end":161440,"line_start":36,"line_end":36,"column_start":5,"column_end":9},"name":"Last","qualname":"::with_position::Position::Last","value":"Position::Last(T)","parent":{"krate":0,"index":1832},"children":[],"decl_id":null,"docs":" This is the last element.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1829},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,119,105,116,104,95,112,111,115,105,116,105,111,110,46,114,115],"byte_start":161483,"byte_end":161487,"line_start":38,"line_end":38,"column_start":5,"column_end":9},"name":"Only","qualname":"::with_position::Position::Only","value":"Position::Only(T)","parent":{"krate":0,"index":1832},"children":[],"decl_id":null,"docs":" This is the only element.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1832},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,119,105,116,104,95,112,111,115,105,116,105,111,110,46,114,115],"byte_start":161264,"byte_end":161272,"line_start":30,"line_end":30,"column_start":10,"column_end":18},"name":"Position","qualname":"::with_position::Position","value":"Position::{First, Middle, Last, Only}","parent":null,"children":[{"krate":0,"index":1817},{"krate":0,"index":1821},{"krate":0,"index":1825},{"krate":0,"index":1829}],"decl_id":null,"docs":" A value yielded by `WithPosition`.\n Indicates the position of this element in the iterator results.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,119,105,116,104,95,112,111,115,105,116,105,111,110,46,114,115],"byte_start":161255,"byte_end":161493,"line_start":30,"line_end":39,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,119,105,116,104,95,112,111,115,105,116,105,111,110,46,114,115],"byte_start":161560,"byte_end":161570,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Position<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1850},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,122,105,112,95,101,113,95,105,109,112,108,46,114,115],"byte_start":163369,"byte_end":163374,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"ZipEq","qualname":"::zip_eq_impl::ZipEq","value":"ZipEq {  }","parent":null,"children":[{"krate":0,"index":1843},{"krate":0,"index":1845}],"decl_id":null,"docs":" An iterator which iterates two other iterators simultaneously","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,122,105,112,95,101,113,95,105,109,112,108,46,114,115],"byte_start":163284,"byte_end":163357,"line_start":7,"line_end":7,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":1156},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,122,105,112,95,101,113,95,105,109,112,108,46,114,115],"byte_start":163749,"byte_end":163755,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"zip_eq","qualname":"::zip_eq_impl::zip_eq","value":"fn <I, J> (i: I, j: J) -> ZipEq<I::IntoIter, J::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Iterate `i` and `j` in lock step.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1856},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,122,105,112,95,108,111,110,103,101,115,116,46,114,115],"byte_start":165183,"byte_end":165193,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"ZipLongest","qualname":"::zip_longest::ZipLongest","value":"ZipLongest {  }","parent":null,"children":[{"krate":0,"index":1855},{"krate":0,"index":1857}],"decl_id":null,"docs":" An iterator which iterates two other iterators simultaneously","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,122,105,112,95,108,111,110,103,101,115,116,46,114,115],"byte_start":165098,"byte_end":165171,"line_start":15,"line_end":15,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1867},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,122,105,112,95,108,111,110,103,101,115,116,46,114,115],"byte_start":167273,"byte_end":167277,"line_start":87,"line_end":87,"column_start":5,"column_end":9},"name":"Both","qualname":"::zip_longest::EitherOrBoth::Both","value":"EitherOrBoth::Both(A, B)","parent":{"krate":0,"index":1862},"children":[],"decl_id":null,"docs":" Neither input iterator is exhausted yet, yielding two values.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1873},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,122,105,112,95,108,111,110,103,101,115,116,46,114,115],"byte_start":167410,"byte_end":167414,"line_start":90,"line_end":90,"column_start":5,"column_end":9},"name":"Left","qualname":"::zip_longest::EitherOrBoth::Left","value":"EitherOrBoth::Left(A)","parent":{"krate":0,"index":1862},"children":[],"decl_id":null,"docs":" The parameter iterator of `.zip_longest()` is exhausted,\n only yielding a value from the `self` iterator.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1877},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,122,105,112,95,108,111,110,103,101,115,116,46,114,115],"byte_start":167544,"byte_end":167549,"line_start":93,"line_end":93,"column_start":5,"column_end":10},"name":"Right","qualname":"::zip_longest::EitherOrBoth::Right","value":"EitherOrBoth::Right(B)","parent":{"krate":0,"index":1862},"children":[],"decl_id":null,"docs":" The `self` iterator of `.zip_longest()` is exhausted,\n only yielding a value from the parameter iterator.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1862},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,122,105,112,95,108,111,110,103,101,115,116,46,114,115],"byte_start":167178,"byte_end":167190,"line_start":85,"line_end":85,"column_start":10,"column_end":22},"name":"EitherOrBoth","qualname":"::zip_longest::EitherOrBoth","value":"EitherOrBoth::{Both, Left, Right}","parent":null,"children":[{"krate":0,"index":1867},{"krate":0,"index":1873},{"krate":0,"index":1877}],"decl_id":null,"docs":" A value yielded by `ZipLongest`.\n Contains one or two values, depending on which of the input iterators are exhausted.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,122,105,112,95,108,111,110,103,101,115,116,46,114,115],"byte_start":167169,"byte_end":167555,"line_start":85,"line_end":94,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":1882},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,122,105,112,116,117,112,108,101,46,114,115],"byte_start":167672,"byte_end":167675,"line_start":5,"line_end":5,"column_start":12,"column_end":15},"name":"Zip","qualname":"::ziptuple::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":1901}],"decl_id":null,"docs":" See [`multizip`](../fn.multizip.html) for more information.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,122,105,112,116,117,112,108,101,46,114,115],"byte_start":167810,"byte_end":167813,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"new","qualname":"<Zip<T>>::new","value":"fn <U> (t: U) -> Zip<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1214},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,122,105,112,116,117,112,108,101,46,114,115],"byte_start":168645,"byte_end":168653,"line_start":42,"line_end":42,"column_start":8,"column_end":16},"name":"multizip","qualname":"::ziptuple::multizip","value":"fn <T, U> (t: U) -> Zip<T>","parent":null,"children":[],"decl_id":null,"docs":" An iterator that generalizes *.zip()* and allows running multiple iterators in lockstep.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1222},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":5394,"byte_end":5403,"line_start":203,"line_end":203,"column_start":11,"column_end":20},"name":"Itertools","qualname":"::Itertools","value":"Itertools: Iterator","parent":null,"children":[{"krate":0,"index":1224},{"krate":0,"index":1226},{"krate":0,"index":1228},{"krate":0,"index":1230},{"krate":0,"index":1232},{"krate":0,"index":1234},{"krate":0,"index":1236},{"krate":0,"index":1238},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":1244},{"krate":0,"index":1246},{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":1252},{"krate":0,"index":1254},{"krate":0,"index":1256},{"krate":0,"index":1258},{"krate":0,"index":1260},{"krate":0,"index":1262},{"krate":0,"index":1264},{"krate":0,"index":1266},{"krate":0,"index":1268},{"krate":0,"index":1270},{"krate":0,"index":1272},{"krate":0,"index":1274},{"krate":0,"index":1276},{"krate":0,"index":1278},{"krate":0,"index":1280},{"krate":0,"index":1282},{"krate":0,"index":1284},{"krate":0,"index":1286},{"krate":0,"index":1288},{"krate":0,"index":1290},{"krate":0,"index":1292},{"krate":0,"index":1294},{"krate":0,"index":1296},{"krate":0,"index":1298},{"krate":0,"index":1300},{"krate":0,"index":1302},{"krate":0,"index":1304},{"krate":0,"index":1306},{"krate":0,"index":1308},{"krate":0,"index":1310},{"krate":0,"index":1312},{"krate":0,"index":1314},{"krate":0,"index":1316},{"krate":0,"index":1318},{"krate":0,"index":1320},{"krate":0,"index":1322},{"krate":0,"index":1324},{"krate":0,"index":1326},{"krate":0,"index":1328}],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1224},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":5792,"byte_end":5802,"line_start":219,"line_end":219,"column_start":8,"column_end":18},"name":"interleave","qualname":"::Itertools::interleave","value":"fn <J> (self, other: J) -> Interleave<Self, J::IntoIter>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1226},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":6301,"byte_end":6320,"line_start":236,"line_end":236,"column_start":8,"column_end":27},"name":"interleave_shortest","qualname":"::Itertools::interleave_shortest","value":"fn <J> (self, other: J) -> InterleaveShortest<Self, J::IntoIter>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":6899,"byte_end":6910,"line_start":255,"line_end":255,"column_start":8,"column_end":19},"name":"intersperse","qualname":"::Itertools::intersperse","value":"fn (self, element: Self::Item) -> Intersperse<Self>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":7749,"byte_end":7760,"line_start":280,"line_end":280,"column_start":8,"column_end":19},"name":"zip_longest","qualname":"::Itertools::zip_longest","value":"fn <J> (self, other: J) -> ZipLongest<Self, J::IntoIter>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":8198,"byte_end":8204,"line_start":293,"line_end":293,"column_start":8,"column_end":14},"name":"zip_eq","qualname":"::Itertools::zip_eq","value":"fn <J> (self, other: J) -> ZipEq<Self, J::IntoIter>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":9126,"byte_end":9134,"line_start":323,"line_end":323,"column_start":8,"column_end":16},"name":"batching","qualname":"::Itertools::batching","value":"fn <B, F> (self, f: F) -> Batching<Self, F>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":10733,"byte_end":10741,"line_start":363,"line_end":363,"column_start":8,"column_end":16},"name":"group_by","qualname":"::Itertools::group_by","value":"fn <K, F> (self, key: F) -> GroupBy<K, Self, F>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":10969,"byte_end":10982,"line_start":372,"line_end":372,"column_start":8,"column_end":21},"name":"group_by_lazy","qualname":"::Itertools::group_by_lazy","value":"fn <K, F> (self, key: F) -> GroupBy<K, Self, F>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":12192,"byte_end":12198,"line_start":406,"line_end":406,"column_start":8,"column_end":14},"name":"chunks","qualname":"::Itertools::chunks","value":"fn (self, size: usize) -> IntoChunks<Self>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":12414,"byte_end":12425,"line_start":415,"line_end":415,"column_start":8,"column_end":19},"name":"chunks_lazy","qualname":"::Itertools::chunks_lazy","value":"fn (self, size: usize) -> IntoChunks<Self>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":13735,"byte_end":13748,"line_start":452,"line_end":452,"column_start":8,"column_end":21},"name":"tuple_windows","qualname":"::Itertools::tuple_windows","value":"fn <T> (self) -> TupleWindows<Self, T>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1246},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":15057,"byte_end":15063,"line_start":491,"line_end":491,"column_start":8,"column_end":14},"name":"tuples","qualname":"::Itertools::tuples","value":"fn <T> (self) -> Tuples<Self, T>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":15840,"byte_end":15843,"line_start":515,"line_end":515,"column_start":8,"column_end":11},"name":"tee","qualname":"::Itertools::tee","value":"fn (self) -> (Tee<Self>, Tee<Self>)","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1250},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":16481,"byte_end":16485,"line_start":538,"line_end":538,"column_start":8,"column_end":12},"name":"step","qualname":"::Itertools::step","value":"fn (self, n: usize) -> Step<Self>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1252},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":17002,"byte_end":17013,"line_start":555,"line_end":555,"column_start":8,"column_end":19},"name":"map_results","qualname":"::Itertools::map_results","value":"fn <F, T, U, E> (self, f: F) -> MapResults<Self, F>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":17676,"byte_end":17681,"line_start":576,"line_end":576,"column_start":8,"column_end":13},"name":"merge","qualname":"::Itertools::merge","value":"fn <J> (self, other: J) -> Merge<Self, J::IntoIter>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":18458,"byte_end":18466,"line_start":600,"line_end":600,"column_start":8,"column_end":16},"name":"merge_by","qualname":"::Itertools::merge_by","value":"fn <J, F> (self, other: J, is_first: F) -> MergeBy<Self, J::IntoIter, F>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1258},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":19296,"byte_end":19302,"line_start":624,"line_end":624,"column_start":8,"column_end":14},"name":"kmerge","qualname":"::Itertools::kmerge","value":"fn (self) -> KMerge<<<Self as Iterator>::Item as IntoIterator>::IntoIter>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1260},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":20303,"byte_end":20312,"line_start":652,"line_end":652,"column_start":8,"column_end":17},"name":"kmerge_by","qualname":"::Itertools::kmerge_by","value":"fn <F> (self, first: F) -> KMergeBy<<<Self as Iterator>::Item as IntoIterator>::IntoIter, F>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1262},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":21106,"byte_end":21123,"line_start":673,"line_end":673,"column_start":8,"column_end":25},"name":"cartesian_product","qualname":"::Itertools::cartesian_product","value":"fn <J> (self, other: J) -> Product<Self, J::IntoIter>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1264},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":22408,"byte_end":22416,"line_start":708,"line_end":708,"column_start":8,"column_end":16},"name":"coalesce","qualname":"::Itertools::coalesce","value":"fn <F> (self, f: F) -> Coalesce<Self, F>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":23130,"byte_end":23135,"line_start":730,"line_end":730,"column_start":8,"column_end":13},"name":"dedup","qualname":"::Itertools::dedup","value":"fn (self) -> Dedup<Self>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1268},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":23794,"byte_end":23800,"line_start":751,"line_end":751,"column_start":8,"column_end":14},"name":"unique","qualname":"::Itertools::unique","value":"fn (self) -> Unique<Self>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1270},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":24522,"byte_end":24531,"line_start":772,"line_end":772,"column_start":8,"column_end":17},"name":"unique_by","qualname":"::Itertools::unique_by","value":"fn <V, F> (self, f: F) -> UniqueBy<Self, V, F>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":25266,"byte_end":25284,"line_start":792,"line_end":792,"column_start":8,"column_end":26},"name":"peeking_take_while","qualname":"::Itertools::peeking_take_while","value":"fn <F> (&mut self, accept: F) -> PeekingTakeWhile<Self, F>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1274},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":26230,"byte_end":26244,"line_start":817,"line_end":817,"column_start":8,"column_end":22},"name":"take_while_ref","qualname":"::Itertools::take_while_ref","value":"fn <F> (&mut self, accept: F) -> TakeWhileRef<Self, F>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1276},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":26910,"byte_end":26920,"line_start":838,"line_end":838,"column_start":8,"column_end":18},"name":"while_some","qualname":"::Itertools::while_some","value":"fn <A> (self) -> WhileSome<Self>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1278},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":28351,"byte_end":28369,"line_start":877,"line_end":877,"column_start":8,"column_end":26},"name":"tuple_combinations","qualname":"::Itertools::tuple_combinations","value":"fn <T> (self) -> TupleCombinations<Self, T>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1280},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":29186,"byte_end":29198,"line_start":904,"line_end":904,"column_start":8,"column_end":20},"name":"combinations","qualname":"::Itertools::combinations","value":"fn (self, n: usize) -> Combinations<Self>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1282},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":30024,"byte_end":30033,"line_start":928,"line_end":928,"column_start":8,"column_end":17},"name":"pad_using","qualname":"::Itertools::pad_using","value":"fn <F> (self, min: usize, f: F) -> PadUsing<Self, F>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1284},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":30568,"byte_end":30575,"line_start":947,"line_end":947,"column_start":8,"column_end":15},"name":"flatten","qualname":"::Itertools::flatten","value":"fn (self) -> Flatten<Self, <<Self as Iterator>::Item as IntoIterator>::IntoIter>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":31514,"byte_end":31527,"line_start":973,"line_end":973,"column_start":8,"column_end":21},"name":"with_position","qualname":"::Itertools::with_position","value":"fn (self) -> WithPosition<Self>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":32102,"byte_end":32112,"line_start":993,"line_end":993,"column_start":8,"column_end":18},"name":"next_tuple","qualname":"::Itertools::next_tuple","value":"fn <T> (&mut self) -> Option<T>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1290},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":32644,"byte_end":32657,"line_start":1011,"line_end":1011,"column_start":8,"column_end":21},"name":"find_position","qualname":"::Itertools::find_position","value":"fn <P> (&mut self, mut pred: P) -> Option<(usize, Self::Item)>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":33535,"byte_end":33543,"line_start":1039,"line_end":1039,"column_start":8,"column_end":16},"name":"dropping","qualname":"::Itertools::dropping","value":"fn (mut self, n: usize) -> Self","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":34236,"byte_end":34249,"line_start":1063,"line_end":1063,"column_start":8,"column_end":21},"name":"dropping_back","qualname":"::Itertools::dropping_back","value":"fn (mut self, n: usize) -> Self","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1296},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":34972,"byte_end":34979,"line_start":1090,"line_end":1090,"column_start":8,"column_end":15},"name":"foreach","qualname":"::Itertools::foreach","value":"fn <F> (&mut self, mut f: F) -> ()","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1298},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":35332,"byte_end":35343,"line_start":1100,"line_end":1100,"column_start":8,"column_end":19},"name":"collect_vec","qualname":"::Itertools::collect_vec","value":"fn (self) -> Vec<Self::Item>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1300},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":35960,"byte_end":35968,"line_start":1122,"line_end":1122,"column_start":8,"column_end":16},"name":"set_from","qualname":"::Itertools::set_from","value":"fn <'a, A, J> (&mut self, from: J) -> usize","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":36680,"byte_end":36684,"line_start":1147,"line_end":1147,"column_start":8,"column_end":12},"name":"join","qualname":"::Itertools::join","value":"fn (&mut self, sep: &str) -> String","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":37812,"byte_end":37818,"line_start":1181,"line_end":1181,"column_start":8,"column_end":14},"name":"format","qualname":"::Itertools::format","value":"fn (self, sep: &str) -> Format<Self>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1306},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":38002,"byte_end":38016,"line_start":1189,"line_end":1189,"column_start":8,"column_end":22},"name":"format_default","qualname":"::Itertools::format_default","value":"fn (self, sep: &str) -> Format<Self>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1308},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":39494,"byte_end":39505,"line_start":1227,"line_end":1227,"column_start":8,"column_end":19},"name":"format_with","qualname":"::Itertools::format_with","value":"fn <F> (self, sep: &str, format: F) -> FormatWith<Self, F>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1310},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":41226,"byte_end":41238,"line_start":1276,"line_end":1276,"column_start":8,"column_end":20},"name":"fold_results","qualname":"::Itertools::fold_results","value":"fn <A, E, B, F> (&mut self, mut start: B, mut f: F) -> Result<B, E>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":42395,"byte_end":42407,"line_start":1308,"line_end":1308,"column_start":8,"column_end":20},"name":"fold_options","qualname":"::Itertools::fold_options","value":"fn <A, B, F> (&mut self, mut start: B, mut f: F) -> Option<B>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1314},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":43207,"byte_end":43212,"line_start":1333,"line_end":1333,"column_start":8,"column_end":13},"name":"fold1","qualname":"::Itertools::fold1","value":"fn <F> (&mut self, mut f: F) -> Option<Self::Item>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1316},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":44854,"byte_end":44864,"line_start":1386,"line_end":1386,"column_start":8,"column_end":18},"name":"fold_while","qualname":"::Itertools::fold_while","value":"fn <B, F> (self, init: B, mut f: F) -> B","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1318},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":45831,"byte_end":45837,"line_start":1418,"line_end":1418,"column_start":8,"column_end":14},"name":"sorted","qualname":"::Itertools::sorted","value":"fn (self) -> Vec<Self::Item>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1320},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":46701,"byte_end":46710,"line_start":1445,"line_end":1445,"column_start":8,"column_end":17},"name":"sorted_by","qualname":"::Itertools::sorted_by","value":"fn <F> (self, cmp: F) -> Vec<Self::Item>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":47650,"byte_end":47663,"line_start":1476,"line_end":1476,"column_start":8,"column_end":21},"name":"partition_map","qualname":"::Itertools::partition_map","value":"fn <A, B, F, L, R> (self, predicate: F) -> (A, B)","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1324},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":49470,"byte_end":49476,"line_start":1530,"line_end":1530,"column_start":8,"column_end":14},"name":"minmax","qualname":"::Itertools::minmax","value":"fn (self) -> MinMaxResult<Self::Item>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1326},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":50172,"byte_end":50185,"line_start":1547,"line_end":1547,"column_start":8,"column_end":21},"name":"minmax_by_key","qualname":"::Itertools::minmax_by_key","value":"fn <K, F> (self, key: F) -> MinMaxResult<Self::Item>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1328},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":50823,"byte_end":50832,"line_start":1561,"line_end":1561,"column_start":8,"column_end":17},"name":"minmax_by","qualname":"::Itertools::minmax_by","value":"fn <F> (self, mut compare: F) -> MinMaxResult<Self::Item>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1332},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":51545,"byte_end":51550,"line_start":1585,"line_end":1585,"column_start":8,"column_end":13},"name":"equal","qualname":"::equal","value":"fn <I, J> (a: I, b: J) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if both iterators produce equal sequences\n (elements pairwise equal and sequences of the same length),\n `false` otherwise.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1334},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":52378,"byte_end":52390,"line_start":1613,"line_end":1613,"column_start":8,"column_end":20},"name":"assert_equal","qualname":"::assert_equal","value":"fn <I, J> (a: I, b: J) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Assert that two iterators produce equal sequences, with the same\n semantics as *equal(a, b)*.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1336},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":53617,"byte_end":53626,"line_start":1655,"line_end":1655,"column_start":8,"column_end":17},"name":"partition","qualname":"::partition","value":"fn <'a, A, I, F> (iter: I, mut pred: F) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Partition a sequence using predicate `pred` so that elements\n that map to `true` are placed before elements which map to `false`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1143},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":54517,"byte_end":54525,"line_start":1684,"line_end":1684,"column_start":5,"column_end":13},"name":"Continue","qualname":"::FoldWhile::Continue","value":"FoldWhile::Continue(T)","parent":{"krate":0,"index":1338},"children":[],"decl_id":null,"docs":" Continue folding with this value\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1147},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":54586,"byte_end":54590,"line_start":1686,"line_end":1686,"column_start":5,"column_end":9},"name":"Done","qualname":"::FoldWhile::Done","value":"FoldWhile::Done(T)","parent":{"krate":0,"index":1338},"children":[],"decl_id":null,"docs":" Fold is complete and will return this value\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1338},"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":54457,"byte_end":54466,"line_start":1682,"line_end":1682,"column_start":10,"column_end":19},"name":"FoldWhile","qualname":"::FoldWhile","value":"FoldWhile::{Continue, Done}","parent":null,"children":[{"krate":0,"index":1143},{"krate":0,"index":1147}],"decl_id":null,"docs":" An enum used for controlling the execution of `.fold_while()`.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,117,108,116,105,112,101,101,107,46,114,115],"byte_start":92476,"byte_end":92485,"line_start":29,"line_end":29,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,117,108,116,105,112,101,101,107,46,114,115],"byte_start":92638,"byte_end":92647,"line_start":38,"line_end":38,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,117,108,116,105,112,101,101,107,46,114,115],"byte_start":93288,"byte_end":93297,"line_start":60,"line_end":60,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,117,108,116,105,112,101,101,107,46,114,115],"byte_start":93721,"byte_end":93730,"line_start":80,"line_end":80,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":56638,"byte_end":56648,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":57985,"byte_end":58003,"line_start":122,"line_end":122,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":60001,"byte_end":60008,"line_start":193,"line_end":193,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":60821,"byte_end":60828,"line_start":228,"line_end":228,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":62369,"byte_end":62377,"line_start":290,"line_end":290,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":63026,"byte_end":63034,"line_start":318,"line_end":318,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":64184,"byte_end":64191,"line_start":368,"line_end":368,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":65777,"byte_end":65785,"line_start":420,"line_end":420,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1406}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":66013,"byte_end":66021,"line_start":429,"line_end":429,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":66987,"byte_end":66991,"line_start":472,"line_end":472,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":67589,"byte_end":67593,"line_start":499,"line_end":499,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":67809,"byte_end":67818,"line_start":514,"line_end":514,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":68050,"byte_end":68059,"line_start":525,"line_end":525,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":69488,"byte_end":69493,"line_start":574,"line_end":574,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":69730,"byte_end":69735,"line_start":585,"line_end":585,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":70541,"byte_end":70546,"line_start":617,"line_end":617,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":71310,"byte_end":71317,"line_start":647,"line_end":647,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":71842,"byte_end":71849,"line_start":669,"line_end":669,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":72117,"byte_end":72124,"line_start":681,"line_end":681,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":72584,"byte_end":72596,"line_start":705,"line_end":705,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":73756,"byte_end":73764,"line_start":746,"line_end":746,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":73933,"byte_end":73941,"line_start":755,"line_end":755,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1432}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":74328,"byte_end":74336,"line_start":775,"line_end":775,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":74895,"byte_end":74900,"line_start":799,"line_end":799,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":75264,"byte_end":75269,"line_start":820,"line_end":820,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1434}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":75402,"byte_end":75407,"line_start":827,"line_end":827,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":76542,"byte_end":76554,"line_start":870,"line_end":870,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1436}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":76891,"byte_end":76903,"line_start":883,"line_end":883,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":422},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":77928,"byte_end":77937,"line_start":924,"line_end":924,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":432},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":79172,"byte_end":79189,"line_start":974,"line_end":974,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":79441,"byte_end":79458,"line_start":990,"line_end":990,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":79576,"byte_end":79593,"line_start":996,"line_end":996,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":81953,"byte_end":81963,"line_start":1078,"line_end":1078,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":82899,"byte_end":82909,"line_start":1124,"line_end":1124,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":83421,"byte_end":83433,"line_start":1145,"line_end":1145,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1538}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":84152,"byte_end":84164,"line_start":1179,"line_end":1179,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":85955,"byte_end":85963,"line_start":1242,"line_end":1242,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1546}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":86395,"byte_end":86403,"line_start":1262,"line_end":1262,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":87086,"byte_end":87092,"line_start":1290,"line_end":1290,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":88105,"byte_end":88111,"line_start":1326,"line_end":1326,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1554}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":88912,"byte_end":88919,"line_start":1365,"line_end":1365,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":90244,"byte_end":90251,"line_start":1412,"line_end":1412,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":91543,"byte_end":91553,"line_start":1460,"line_end":1460,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,99,111,110,115,95,116,117,112,108,101,115,95,105,109,112,108,46,114,115],"byte_start":100021,"byte_end":100031,"line_start":45,"line_end":45,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,102,111,114,109,97,116,46,114,115],"byte_start":104477,"byte_end":104487,"line_start":49,"line_end":49,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,102,111,114,109,97,116,46,114,115],"byte_start":105236,"byte_end":105242,"line_start":73,"line_end":73,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":106640,"byte_end":106641,"line_start":10,"line_end":10,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":106929,"byte_end":106939,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":107135,"byte_end":107145,"line_start":39,"line_end":39,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":108113,"byte_end":108123,"line_start":75,"line_end":75,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":682},{"krate":0,"index":684},{"krate":0,"index":686},{"krate":0,"index":688},{"krate":0,"index":690},{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":114458,"byte_end":114468,"line_start":259,"line_end":259,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":116176,"byte_end":116183,"line_start":315,"line_end":315,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":117316,"byte_end":117322,"line_start":360,"line_end":360,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":118232,"byte_end":118237,"line_start":396,"line_end":396,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":118408,"byte_end":118413,"line_start":405,"line_end":405,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":732},{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":120141,"byte_end":120151,"line_start":468,"line_end":468,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":742},{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":121063,"byte_end":121069,"line_start":509,"line_end":509,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":121828,"byte_end":121833,"line_start":542,"line_end":542,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":121992,"byte_end":121997,"line_start":551,"line_end":551,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":770},{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,105,110,116,101,114,115,112,101,114,115,101,46,114,115],"byte_start":123004,"byte_end":123015,"line_start":33,"line_end":33,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":786},{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,107,109,101,114,103,101,95,105,109,112,108,46,114,115],"byte_start":124323,"byte_end":124331,"line_start":31,"line_end":31,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":806},{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,107,109,101,114,103,101,95,105,109,112,108,46,114,115],"byte_start":125227,"byte_end":125235,"line_start":62,"line_end":62,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,107,109,101,114,103,101,95,105,109,112,108,46,114,115],"byte_start":127602,"byte_end":127608,"line_start":143,"line_end":143,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,107,109,101,114,103,101,95,105,109,112,108,46,114,115],"byte_start":127777,"byte_end":127783,"line_start":152,"line_end":152,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":830},{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,107,109,101,114,103,101,95,105,109,112,108,46,114,115],"byte_start":129585,"byte_end":129593,"line_start":212,"line_end":212,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":840},{"krate":0,"index":842},{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,109,105,110,109,97,120,46,114,115],"byte_start":130761,"byte_end":130773,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,97,100,95,116,97,105,108,46,114,115],"byte_start":134884,"byte_end":134892,"line_start":31,"line_end":31,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":866},{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,97,100,95,116,97,105,108,46,114,115],"byte_start":135655,"byte_end":135663,"line_start":62,"line_end":62,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,97,100,95,116,97,105,108,46,114,115],"byte_start":136120,"byte_end":136128,"line_start":79,"line_end":79,"column_start":34,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":136987,"byte_end":136995,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":890}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":137315,"byte_end":137322,"line_start":37,"line_end":37,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":137711,"byte_end":137719,"line_start":55,"line_end":55,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":138600,"byte_end":138616,"line_start":94,"line_end":94,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":908},{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":139862,"byte_end":139866,"line_start":136,"line_end":136,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1712}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":139918,"byte_end":139923,"line_start":137,"line_end":137,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1716}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":139972,"byte_end":139983,"line_start":138,"line_end":138,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1720}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":140032,"byte_end":140037,"line_start":139,"line_end":139,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1724}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":140092,"byte_end":140096,"line_start":140,"line_end":140,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1728}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":140154,"byte_end":140158,"line_start":141,"line_end":141,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1732}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":140210,"byte_end":140215,"line_start":142,"line_end":142,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1736}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":140287,"byte_end":140291,"line_start":143,"line_end":143,"column_start":67,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1740}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":140365,"byte_end":140369,"line_start":144,"line_end":144,"column_start":65,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1744}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":140568,"byte_end":140571,"line_start":148,"line_end":148,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1748}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,114,99,105,116,101,114,95,105,109,112,108,46,114,115],"byte_start":142005,"byte_end":142011,"line_start":45,"line_end":45,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,114,99,105,116,101,114,95,105,109,112,108,46,114,115],"byte_start":142146,"byte_end":142152,"line_start":52,"line_end":52,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":932},{"krate":0,"index":934},{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,114,99,105,116,101,114,95,105,109,112,108,46,114,115],"byte_start":142711,"byte_end":142717,"line_start":71,"line_end":71,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,114,101,112,101,97,116,110,46,114,115],"byte_start":143595,"byte_end":143602,"line_start":21,"line_end":21,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,114,101,112,101,97,116,110,46,114,115],"byte_start":144052,"byte_end":144059,"line_start":38,"line_end":38,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":962},{"krate":0,"index":964},{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,114,101,112,101,97,116,110,46,114,115],"byte_start":144449,"byte_end":144456,"line_start":58,"line_end":58,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,114,101,112,101,97,116,110,46,114,115],"byte_start":144606,"byte_end":144613,"line_start":67,"line_end":67,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,115,111,117,114,99,101,115,46,114,115],"byte_start":147265,"byte_end":147275,"line_start":12,"line_end":12,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1750}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,115,111,117,114,99,101,115,46,114,115],"byte_start":148020,"byte_end":148030,"line_start":43,"line_end":43,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1010},{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,115,111,117,114,99,101,115,46,114,115],"byte_start":149726,"byte_end":149732,"line_start":105,"line_end":105,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1752}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,115,111,117,114,99,101,115,46,114,115],"byte_start":150053,"byte_end":150059,"line_start":119,"line_end":119,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1020},{"krate":0,"index":1022},{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,115,111,117,114,99,101,115,46,114,115],"byte_start":150682,"byte_end":150689,"line_start":147,"line_end":147,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1766}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,115,111,117,114,99,101,115,46,114,115],"byte_start":150792,"byte_end":150799,"line_start":153,"line_end":153,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1030},{"krate":0,"index":1032},{"krate":0,"index":1034}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,116,101,101,46,114,115],"byte_start":152405,"byte_end":152408,"line_start":34,"line_end":34,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1058},{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,116,101,101,46,114,115],"byte_start":153505,"byte_end":153508,"line_start":72,"line_end":72,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,116,117,112,108,101,95,105,109,112,108,46,114,115],"byte_start":153916,"byte_end":153927,"line_start":16,"line_end":16,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1072}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,116,117,112,108,101,95,105,109,112,108,46,114,115],"byte_start":154100,"byte_end":154111,"line_start":27,"line_end":27,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1078},{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,116,117,112,108,101,95,105,109,112,108,46,114,115],"byte_start":154777,"byte_end":154788,"line_start":55,"line_end":55,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,116,117,112,108,101,95,105,109,112,108,46,114,115],"byte_start":155363,"byte_end":155369,"line_start":82,"line_end":82,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1090},{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,116,117,112,108,101,95,105,109,112,108,46,114,115],"byte_start":155581,"byte_end":155587,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,116,117,112,108,101,95,105,109,112,108,46,114,115],"byte_start":157103,"byte_end":157115,"line_start":149,"line_end":149,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1106},{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,119,105,116,104,95,112,111,115,105,116,105,111,110,46,114,115],"byte_start":161503,"byte_end":161511,"line_start":41,"line_end":41,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,119,105,116,104,95,112,111,115,105,116,105,111,110,46,114,115],"byte_start":161790,"byte_end":161802,"line_start":53,"line_end":53,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1144},{"krate":0,"index":1146},{"krate":0,"index":1148}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,119,105,116,104,95,112,111,115,105,116,105,111,110,46,114,115],"byte_start":163038,"byte_end":163050,"line_start":87,"line_end":87,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,122,105,112,95,101,113,95,105,109,112,108,46,114,115],"byte_start":163961,"byte_end":163966,"line_start":37,"line_end":37,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1160},{"krate":0,"index":1162},{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,122,105,112,95,101,113,95,105,109,112,108,46,114,115],"byte_start":164544,"byte_end":164549,"line_start":57,"line_end":57,"column_start":34,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,122,105,112,95,108,111,110,103,101,115,116,46,114,115],"byte_start":165474,"byte_end":165484,"line_start":32,"line_end":32,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1194},{"krate":0,"index":1196},{"krate":0,"index":1198}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,122,105,112,95,108,111,110,103,101,115,116,46,114,115],"byte_start":166064,"byte_end":166074,"line_start":54,"line_end":54,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,122,105,112,95,108,111,110,103,101,115,116,46,114,115],"byte_start":166825,"byte_end":166835,"line_start":74,"line_end":74,"column_start":34,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,122,105,112,116,117,112,108,101,46,114,115],"byte_start":167702,"byte_end":167705,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":51139,"byte_end":51140,"line_start":1572,"line_end":1572,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2565,"byte_end":2569,"line_start":98,"line_end":98,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":542}}],"macro_refs":[],"relations":[{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,117,108,116,105,112,101,101,107,46,114,115],"byte_start":92476,"byte_end":92485,"line_start":29,"line_end":29,"column_start":9,"column_end":18},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":1340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,117,108,116,105,112,101,101,107,46,114,115],"byte_start":92638,"byte_end":92647,"line_start":38,"line_end":38,"column_start":19,"column_end":28},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":1340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,117,108,116,105,112,101,101,107,46,114,115],"byte_start":93288,"byte_end":93297,"line_start":60,"line_end":60,"column_start":22,"column_end":31},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":1340},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,117,108,116,105,112,101,101,107,46,114,115],"byte_start":93721,"byte_end":93730,"line_start":80,"line_end":80,"column_start":31,"column_end":40},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":1340},"to":{"krate":2,"index":3820}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":56638,"byte_end":56648,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":1350},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":57985,"byte_end":58003,"line_start":122,"line_end":122,"column_start":25,"column_end":43},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":1360},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":60001,"byte_end":60008,"line_start":193,"line_end":193,"column_start":9,"column_end":16},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":1370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":60821,"byte_end":60828,"line_start":228,"line_end":228,"column_start":22,"column_end":29},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":1370},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":62369,"byte_end":62377,"line_start":290,"line_end":290,"column_start":19,"column_end":27},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":1380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":63026,"byte_end":63034,"line_start":318,"line_end":318,"column_start":32,"column_end":40},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":1380},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":64184,"byte_end":64191,"line_start":368,"line_end":368,"column_start":25,"column_end":32},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":1390},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":65777,"byte_end":65785,"line_start":420,"line_end":420,"column_start":27,"column_end":35},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":1400},"to":{"krate":2,"index":7272}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":66013,"byte_end":66021,"line_start":429,"line_end":429,"column_start":28,"column_end":36},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":1400},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":66987,"byte_end":66991,"line_start":472,"line_end":472,"column_start":22,"column_end":26},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":1408},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":67589,"byte_end":67593,"line_start":499,"line_end":499,"column_start":31,"column_end":35},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":1408},"to":{"krate":2,"index":3820}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":67809,"byte_end":67818,"line_start":514,"line_end":514,"column_start":22,"column_end":31},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":320},"to":{"krate":2,"index":2466}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":68050,"byte_end":68059,"line_start":525,"line_end":525,"column_start":12,"column_end":21},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":69488,"byte_end":69493,"line_start":574,"line_end":574,"column_start":22,"column_end":27},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":332},"to":{"krate":2,"index":2466}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":69730,"byte_end":69735,"line_start":585,"line_end":585,"column_start":27,"column_end":32},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":332},"to":{"krate":2,"index":7272}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":70541,"byte_end":70546,"line_start":617,"line_end":617,"column_start":25,"column_end":30},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":332},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":71310,"byte_end":71317,"line_start":647,"line_end":647,"column_start":30,"column_end":37},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":350},"to":{"krate":2,"index":7272}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":71842,"byte_end":71849,"line_start":669,"line_end":669,"column_start":25,"column_end":32},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":350},"to":{"krate":2,"index":2466}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":72117,"byte_end":72124,"line_start":681,"line_end":681,"column_start":28,"column_end":35},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":350},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":72584,"byte_end":72596,"line_start":705,"line_end":705,"column_start":9,"column_end":21},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":1422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":73756,"byte_end":73764,"line_start":746,"line_end":746,"column_start":36,"column_end":44},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2466}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":73933,"byte_end":73941,"line_start":755,"line_end":755,"column_start":27,"column_end":35},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":374},"to":{"krate":2,"index":7272}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":74328,"byte_end":74336,"line_start":775,"line_end":775,"column_start":25,"column_end":33},"kind":{"variant":"Impl","fields":[26]},"from":{"krate":0,"index":374},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":74895,"byte_end":74900,"line_start":799,"line_end":799,"column_start":26,"column_end":31},"kind":{"variant":"Impl","fields":[27]},"from":{"krate":0,"index":392},"to":{"krate":2,"index":2466}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":75264,"byte_end":75269,"line_start":820,"line_end":820,"column_start":24,"column_end":29},"kind":{"variant":"Impl","fields":[28]},"from":{"krate":0,"index":392},"to":{"krate":2,"index":7272}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":75402,"byte_end":75407,"line_start":827,"line_end":827,"column_start":22,"column_end":27},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":0,"index":392},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":76542,"byte_end":76554,"line_start":870,"line_end":870,"column_start":31,"column_end":43},"kind":{"variant":"Impl","fields":[30]},"from":{"krate":0,"index":412},"to":{"krate":2,"index":7272}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":76891,"byte_end":76903,"line_start":883,"line_end":883,"column_start":29,"column_end":41},"kind":{"variant":"Impl","fields":[31]},"from":{"krate":0,"index":412},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":77928,"byte_end":77937,"line_start":924,"line_end":924,"column_start":25,"column_end":34},"kind":{"variant":"Impl","fields":[32]},"from":{"krate":0,"index":1438},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":78733,"byte_end":78738,"line_start":957,"line_end":957,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1726},"to":{"krate":0,"index":436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":79172,"byte_end":79189,"line_start":974,"line_end":974,"column_start":25,"column_end":42},"kind":{"variant":"Impl","fields":[33]},"from":{"krate":0,"index":1448},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":79441,"byte_end":79458,"line_start":990,"line_end":990,"column_start":21,"column_end":38},"kind":{"variant":"Impl","fields":[34]},"from":{"krate":0,"index":1454},"to":{"krate":2,"index":2504}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":79576,"byte_end":79593,"line_start":996,"line_end":996,"column_start":32,"column_end":49},"kind":{"variant":"Impl","fields":[35]},"from":{"krate":0,"index":1454},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":81953,"byte_end":81963,"line_start":1078,"line_end":1078,"column_start":9,"column_end":19},"kind":{"variant":"Impl","fields":[36]},"from":{"krate":0,"index":1532},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":82899,"byte_end":82909,"line_start":1124,"line_end":1124,"column_start":26,"column_end":36},"kind":{"variant":"Impl","fields":[37]},"from":{"krate":0,"index":1532},"to":{"krate":2,"index":2036}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":83421,"byte_end":83433,"line_start":1145,"line_end":1145,"column_start":24,"column_end":36},"kind":{"variant":"Impl","fields":[38]},"from":{"krate":0,"index":480},"to":{"krate":2,"index":7272}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":84152,"byte_end":84164,"line_start":1179,"line_end":1179,"column_start":22,"column_end":34},"kind":{"variant":"Impl","fields":[39]},"from":{"krate":0,"index":480},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":85955,"byte_end":85963,"line_start":1242,"line_end":1242,"column_start":30,"column_end":38},"kind":{"variant":"Impl","fields":[40]},"from":{"krate":0,"index":1540},"to":{"krate":2,"index":7272}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":86395,"byte_end":86403,"line_start":1262,"line_end":1262,"column_start":28,"column_end":36},"kind":{"variant":"Impl","fields":[41]},"from":{"krate":0,"index":1540},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":87086,"byte_end":87092,"line_start":1290,"line_end":1290,"column_start":22,"column_end":28},"kind":{"variant":"Impl","fields":[42]},"from":{"krate":0,"index":1548},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":88105,"byte_end":88111,"line_start":1326,"line_end":1326,"column_start":24,"column_end":30},"kind":{"variant":"Impl","fields":[43]},"from":{"krate":0,"index":1548},"to":{"krate":2,"index":7272}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":88912,"byte_end":88919,"line_start":1365,"line_end":1365,"column_start":25,"column_end":32},"kind":{"variant":"Impl","fields":[44]},"from":{"krate":0,"index":1556},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":90244,"byte_end":90251,"line_start":1412,"line_end":1412,"column_start":36,"column_end":43},"kind":{"variant":"Impl","fields":[45]},"from":{"krate":0,"index":1556},"to":{"krate":2,"index":3806}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,97,100,97,112,116,111,114,115,92,109,111,100,46,114,115],"byte_start":91543,"byte_end":91553,"line_start":1460,"line_end":1460,"column_start":34,"column_end":44},"kind":{"variant":"Impl","fields":[46]},"from":{"krate":0,"index":530},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,99,111,110,115,95,116,117,112,108,101,115,95,105,109,112,108,46,114,115],"byte_start":100021,"byte_end":100031,"line_start":45,"line_end":45,"column_start":22,"column_end":32},"kind":{"variant":"Impl","fields":[47]},"from":{"krate":0,"index":602},"to":{"krate":2,"index":2466}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,102,111,114,109,97,116,46,114,115],"byte_start":104477,"byte_end":104487,"line_start":49,"line_end":49,"column_start":33,"column_end":43},"kind":{"variant":"Impl","fields":[48]},"from":{"krate":0,"index":626},"to":{"krate":2,"index":7276}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,102,111,114,109,97,116,46,114,115],"byte_start":105236,"byte_end":105242,"line_start":73,"line_end":73,"column_start":13,"column_end":19},"kind":{"variant":"Impl","fields":[49]},"from":{"krate":0,"index":1638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":106640,"byte_end":106641,"line_start":10,"line_end":10,"column_start":46,"column_end":47},"kind":{"variant":"Impl","fields":[50]},"from":{"krate":0,"index":491},"to":{"krate":0,"index":652}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":106929,"byte_end":106939,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[51]},"from":{"krate":0,"index":664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":107135,"byte_end":107145,"line_start":39,"line_end":39,"column_start":32,"column_end":42},"kind":{"variant":"Impl","fields":[52]},"from":{"krate":0,"index":664},"to":{"krate":0,"index":652}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":108113,"byte_end":108123,"line_start":75,"line_end":75,"column_start":15,"column_end":25},"kind":{"variant":"Impl","fields":[53]},"from":{"krate":0,"index":676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":114458,"byte_end":114468,"line_start":259,"line_end":259,"column_start":15,"column_end":25},"kind":{"variant":"Impl","fields":[54]},"from":{"krate":0,"index":676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":116176,"byte_end":116183,"line_start":315,"line_end":315,"column_start":15,"column_end":22},"kind":{"variant":"Impl","fields":[55]},"from":{"krate":0,"index":698},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":117316,"byte_end":117322,"line_start":360,"line_end":360,"column_start":32,"column_end":38},"kind":{"variant":"Impl","fields":[56]},"from":{"krate":0,"index":716},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":118232,"byte_end":118237,"line_start":396,"line_end":396,"column_start":28,"column_end":33},"kind":{"variant":"Impl","fields":[57]},"from":{"krate":0,"index":724},"to":{"krate":2,"index":1970}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":118408,"byte_end":118413,"line_start":405,"line_end":405,"column_start":32,"column_end":37},"kind":{"variant":"Impl","fields":[58]},"from":{"krate":0,"index":724},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":120141,"byte_end":120151,"line_start":468,"line_end":468,"column_start":9,"column_end":19},"kind":{"variant":"Impl","fields":[59]},"from":{"krate":0,"index":738},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":121063,"byte_end":121069,"line_start":509,"line_end":509,"column_start":26,"column_end":32},"kind":{"variant":"Impl","fields":[60]},"from":{"krate":0,"index":754},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":121828,"byte_end":121833,"line_start":542,"line_end":542,"column_start":22,"column_end":27},"kind":{"variant":"Impl","fields":[61]},"from":{"krate":0,"index":762},"to":{"krate":2,"index":1970}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,103,114,111,117,112,98,121,108,97,122,121,46,114,115],"byte_start":121992,"byte_end":121997,"line_start":551,"line_end":551,"column_start":26,"column_end":31},"kind":{"variant":"Impl","fields":[62]},"from":{"krate":0,"index":762},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,105,110,116,101,114,115,112,101,114,115,101,46,114,115],"byte_start":123004,"byte_end":123015,"line_start":33,"line_end":33,"column_start":22,"column_end":33},"kind":{"variant":"Impl","fields":[63]},"from":{"krate":0,"index":1680},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,107,109,101,114,103,101,95,105,109,112,108,46,114,115],"byte_start":124323,"byte_end":124331,"line_start":31,"line_end":31,"column_start":9,"column_end":17},"kind":{"variant":"Impl","fields":[64]},"from":{"krate":0,"index":800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,107,109,101,114,103,101,95,105,109,112,108,46,114,115],"byte_start":125227,"byte_end":125235,"line_start":62,"line_end":62,"column_start":19,"column_end":27},"kind":{"variant":"Impl","fields":[65]},"from":{"krate":0,"index":800},"to":{"krate":2,"index":2466}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,107,109,101,114,103,101,95,105,109,112,108,46,114,115],"byte_start":127602,"byte_end":127608,"line_start":143,"line_end":143,"column_start":19,"column_end":25},"kind":{"variant":"Impl","fields":[66]},"from":{"krate":0,"index":818},"to":{"krate":2,"index":2466}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,107,109,101,114,103,101,95,105,109,112,108,46,114,115],"byte_start":127777,"byte_end":127783,"line_start":152,"line_end":152,"column_start":22,"column_end":28},"kind":{"variant":"Impl","fields":[67]},"from":{"krate":0,"index":818},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,107,109,101,114,103,101,95,105,109,112,108,46,114,115],"byte_start":129585,"byte_end":129593,"line_start":212,"line_end":212,"column_start":25,"column_end":33},"kind":{"variant":"Impl","fields":[68]},"from":{"krate":0,"index":834},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,109,105,110,109,97,120,46,114,115],"byte_start":130761,"byte_end":130773,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"kind":{"variant":"Impl","fields":[69]},"from":{"krate":0,"index":1686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,97,100,95,116,97,105,108,46,114,115],"byte_start":134884,"byte_end":134892,"line_start":31,"line_end":31,"column_start":25,"column_end":33},"kind":{"variant":"Impl","fields":[70]},"from":{"krate":0,"index":1704},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,97,100,95,116,97,105,108,46,114,115],"byte_start":135655,"byte_end":135663,"line_start":62,"line_end":62,"column_start":36,"column_end":44},"kind":{"variant":"Impl","fields":[71]},"from":{"krate":0,"index":1704},"to":{"krate":2,"index":3806}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,97,100,95,116,97,105,108,46,114,115],"byte_start":136120,"byte_end":136128,"line_start":79,"line_end":79,"column_start":34,"column_end":42},"kind":{"variant":"Impl","fields":[72]},"from":{"krate":0,"index":1704},"to":{"krate":2,"index":3820}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":136673,"byte_end":136681,"line_start":14,"line_end":14,"column_start":25,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":3436},"to":{"krate":0,"index":884}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":136987,"byte_end":136995,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"variant":"Impl","fields":[73]},"from":{"krate":2,"index":35078},"to":{"krate":0,"index":884}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":137315,"byte_end":137322,"line_start":37,"line_end":37,"column_start":25,"column_end":32},"kind":{"variant":"Impl","fields":[74]},"from":{"krate":0,"index":1370},"to":{"krate":0,"index":884}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":137711,"byte_end":137719,"line_start":55,"line_end":55,"column_start":25,"column_end":33},"kind":{"variant":"Impl","fields":[75]},"from":{"krate":0,"index":1380},"to":{"krate":0,"index":884}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":138600,"byte_end":138616,"line_start":94,"line_end":94,"column_start":29,"column_end":45},"kind":{"variant":"Impl","fields":[76]},"from":{"krate":0,"index":900},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":139862,"byte_end":139866,"line_start":136,"line_end":136,"column_start":48,"column_end":52},"kind":{"variant":"Impl","fields":[77]},"from":{"krate":2,"index":5420},"to":{"krate":0,"index":884}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":139918,"byte_end":139923,"line_start":137,"line_end":137,"column_start":43,"column_end":48},"kind":{"variant":"Impl","fields":[78]},"from":{"krate":2,"index":35690},"to":{"krate":0,"index":884}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":139972,"byte_end":139983,"line_start":138,"line_end":138,"column_start":43,"column_end":54},"kind":{"variant":"Impl","fields":[79]},"from":{"krate":2,"index":35700},"to":{"krate":0,"index":884}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":140032,"byte_end":140037,"line_start":139,"line_end":139,"column_start":43,"column_end":48},"kind":{"variant":"Impl","fields":[80]},"from":{"krate":2,"index":35710},"to":{"krate":0,"index":884}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":140092,"byte_end":140096,"line_start":140,"line_end":140,"column_start":49,"column_end":53},"kind":{"variant":"Impl","fields":[81]},"from":{"krate":2,"index":35200},"to":{"krate":0,"index":884}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":140154,"byte_end":140158,"line_start":141,"line_end":141,"column_start":49,"column_end":53},"kind":{"variant":"Impl","fields":[82]},"from":{"krate":2,"index":35304},"to":{"krate":0,"index":884}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":140210,"byte_end":140215,"line_start":142,"line_end":142,"column_start":43,"column_end":48},"kind":{"variant":"Impl","fields":[83]},"from":{"krate":2,"index":3706},"to":{"krate":0,"index":884}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":140287,"byte_end":140291,"line_start":143,"line_end":143,"column_start":67,"column_end":71},"kind":{"variant":"Impl","fields":[84]},"from":{"krate":3,"index":2862},"to":{"krate":0,"index":884}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":140365,"byte_end":140369,"line_start":144,"line_end":144,"column_start":65,"column_end":69},"kind":{"variant":"Impl","fields":[85]},"from":{"krate":3,"index":5040},"to":{"krate":0,"index":884}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,112,101,101,107,105,110,103,95,116,97,107,101,95,119,104,105,108,101,46,114,115],"byte_start":140568,"byte_end":140571,"line_start":148,"line_end":148,"column_start":39,"column_end":42},"kind":{"variant":"Impl","fields":[86]},"from":{"krate":2,"index":34980},"to":{"krate":0,"index":884}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,114,99,105,116,101,114,95,105,109,112,108,46,114,115],"byte_start":142005,"byte_end":142011,"line_start":45,"line_end":45,"column_start":19,"column_end":25},"kind":{"variant":"Impl","fields":[87]},"from":{"krate":0,"index":922},"to":{"krate":2,"index":2466}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,114,99,105,116,101,114,95,105,109,112,108,46,114,115],"byte_start":142146,"byte_end":142152,"line_start":52,"line_end":52,"column_start":25,"column_end":31},"kind":{"variant":"Impl","fields":[88]},"from":{"krate":0,"index":922},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,114,99,105,116,101,114,95,105,109,112,108,46,114,115],"byte_start":142711,"byte_end":142717,"line_start":71,"line_end":71,"column_start":33,"column_end":39},"kind":{"variant":"Impl","fields":[89]},"from":{"krate":0,"index":922},"to":{"krate":2,"index":3806}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,114,101,112,101,97,116,110,46,114,115],"byte_start":143595,"byte_end":143602,"line_start":21,"line_end":21,"column_start":9,"column_end":16},"kind":{"variant":"Impl","fields":[90]},"from":{"krate":0,"index":952},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,114,101,112,101,97,116,110,46,114,115],"byte_start":144052,"byte_end":144059,"line_start":38,"line_end":38,"column_start":22,"column_end":29},"kind":{"variant":"Impl","fields":[91]},"from":{"krate":0,"index":952},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,114,101,112,101,97,116,110,46,114,115],"byte_start":144449,"byte_end":144456,"line_start":58,"line_end":58,"column_start":33,"column_end":40},"kind":{"variant":"Impl","fields":[92]},"from":{"krate":0,"index":952},"to":{"krate":2,"index":3806}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,114,101,112,101,97,116,110,46,114,115],"byte_start":144606,"byte_end":144613,"line_start":67,"line_end":67,"column_start":31,"column_end":38},"kind":{"variant":"Impl","fields":[93]},"from":{"krate":0,"index":952},"to":{"krate":2,"index":3820}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,115,111,117,114,99,101,115,46,114,115],"byte_start":147265,"byte_end":147275,"line_start":12,"line_end":12,"column_start":24,"column_end":34},"kind":{"variant":"Impl","fields":[94]},"from":{"krate":0,"index":1000},"to":{"krate":2,"index":7272}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,115,111,117,114,99,101,115,46,114,115],"byte_start":148020,"byte_end":148030,"line_start":43,"line_end":43,"column_start":25,"column_end":35},"kind":{"variant":"Impl","fields":[95]},"from":{"krate":0,"index":1000},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,115,111,117,114,99,101,115,46,114,115],"byte_start":149726,"byte_end":149732,"line_start":105,"line_end":105,"column_start":28,"column_end":34},"kind":{"variant":"Impl","fields":[96]},"from":{"krate":0,"index":1754},"to":{"krate":2,"index":7272}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,115,111,117,114,99,101,115,46,114,115],"byte_start":150053,"byte_end":150059,"line_start":119,"line_end":119,"column_start":29,"column_end":35},"kind":{"variant":"Impl","fields":[97]},"from":{"krate":0,"index":1754},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,115,111,117,114,99,101,115,46,114,115],"byte_start":150682,"byte_end":150689,"line_start":147,"line_end":147,"column_start":28,"column_end":35},"kind":{"variant":"Impl","fields":[98]},"from":{"krate":0,"index":1760},"to":{"krate":2,"index":7272}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,115,111,117,114,99,101,115,46,114,115],"byte_start":150792,"byte_end":150799,"line_start":153,"line_end":153,"column_start":26,"column_end":33},"kind":{"variant":"Impl","fields":[99]},"from":{"krate":0,"index":1760},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,116,101,101,46,114,115],"byte_start":152405,"byte_end":152408,"line_start":34,"line_end":34,"column_start":22,"column_end":25},"kind":{"variant":"Impl","fields":[100]},"from":{"krate":0,"index":1050},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,116,101,101,46,114,115],"byte_start":153505,"byte_end":153508,"line_start":72,"line_end":72,"column_start":31,"column_end":34},"kind":{"variant":"Impl","fields":[101]},"from":{"krate":0,"index":1050},"to":{"krate":2,"index":3820}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,116,117,112,108,101,95,105,109,112,108,46,114,115],"byte_start":153916,"byte_end":153927,"line_start":16,"line_end":16,"column_start":9,"column_end":20},"kind":{"variant":"Impl","fields":[102]},"from":{"krate":0,"index":1068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,116,117,112,108,101,95,105,109,112,108,46,114,115],"byte_start":154100,"byte_end":154111,"line_start":27,"line_end":27,"column_start":22,"column_end":33},"kind":{"variant":"Impl","fields":[103]},"from":{"krate":0,"index":1068},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,116,117,112,108,101,95,105,109,112,108,46,114,115],"byte_start":154777,"byte_end":154788,"line_start":55,"line_end":55,"column_start":31,"column_end":42},"kind":{"variant":"Impl","fields":[104]},"from":{"krate":0,"index":1068},"to":{"krate":2,"index":3820}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,116,117,112,108,101,95,105,109,112,108,46,114,115],"byte_start":155363,"byte_end":155369,"line_start":82,"line_end":82,"column_start":25,"column_end":31},"kind":{"variant":"Impl","fields":[105]},"from":{"krate":0,"index":1084},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,116,117,112,108,101,95,105,109,112,108,46,114,115],"byte_start":155581,"byte_end":155587,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"kind":{"variant":"Impl","fields":[106]},"from":{"krate":0,"index":1084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,116,117,112,108,101,95,105,109,112,108,46,114,115],"byte_start":157103,"byte_end":157115,"line_start":149,"line_end":149,"column_start":25,"column_end":37},"kind":{"variant":"Impl","fields":[107]},"from":{"krate":0,"index":1098},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,116,117,112,108,101,95,105,109,112,108,46,114,115],"byte_start":157641,"byte_end":157646,"line_start":170,"line_end":170,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1726},"to":{"krate":0,"index":1110}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,119,105,116,104,95,112,111,115,105,116,105,111,110,46,114,115],"byte_start":161503,"byte_end":161511,"line_start":41,"line_end":41,"column_start":9,"column_end":17},"kind":{"variant":"Impl","fields":[108]},"from":{"krate":0,"index":1832},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,119,105,116,104,95,112,111,115,105,116,105,111,110,46,114,115],"byte_start":161790,"byte_end":161802,"line_start":53,"line_end":53,"column_start":32,"column_end":44},"kind":{"variant":"Impl","fields":[109]},"from":{"krate":0,"index":1134},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,119,105,116,104,95,112,111,115,105,116,105,111,110,46,114,115],"byte_start":163038,"byte_end":163050,"line_start":87,"line_end":87,"column_start":31,"column_end":43},"kind":{"variant":"Impl","fields":[110]},"from":{"krate":0,"index":1134},"to":{"krate":2,"index":3820}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,122,105,112,95,101,113,95,105,109,112,108,46,114,115],"byte_start":163961,"byte_end":163966,"line_start":37,"line_end":37,"column_start":25,"column_end":30},"kind":{"variant":"Impl","fields":[111]},"from":{"krate":0,"index":1850},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,122,105,112,95,101,113,95,105,109,112,108,46,114,115],"byte_start":164544,"byte_end":164549,"line_start":57,"line_end":57,"column_start":34,"column_end":39},"kind":{"variant":"Impl","fields":[112]},"from":{"krate":0,"index":1850},"to":{"krate":2,"index":3820}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,122,105,112,95,108,111,110,103,101,115,116,46,114,115],"byte_start":165474,"byte_end":165484,"line_start":32,"line_end":32,"column_start":25,"column_end":35},"kind":{"variant":"Impl","fields":[113]},"from":{"krate":0,"index":1856},"to":{"krate":2,"index":3436}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,122,105,112,95,108,111,110,103,101,115,116,46,114,115],"byte_start":166064,"byte_end":166074,"line_start":54,"line_end":54,"column_start":36,"column_end":46},"kind":{"variant":"Impl","fields":[114]},"from":{"krate":0,"index":1856},"to":{"krate":2,"index":3806}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,122,105,112,95,108,111,110,103,101,115,116,46,114,115],"byte_start":166825,"byte_end":166835,"line_start":74,"line_end":74,"column_start":34,"column_end":44},"kind":{"variant":"Impl","fields":[115]},"from":{"krate":0,"index":1856},"to":{"krate":2,"index":3820}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,122,105,112,116,117,112,108,101,46,114,115],"byte_start":167702,"byte_end":167705,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"kind":{"variant":"Impl","fields":[116]},"from":{"krate":0,"index":1882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":5406,"byte_end":5414,"line_start":203,"line_end":203,"column_start":23,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":3436},"to":{"krate":0,"index":1222}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,109,105,107,101,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,101,114,116,111,111,108,115,45,48,46,53,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":51139,"byte_end":51140,"line_start":1572,"line_end":1572,"column_start":31,"column_end":32},"kind":{"variant":"Impl","fields":[117]},"from":{"krate":0,"index":1125},"to":{"krate":0,"index":1222}}]}